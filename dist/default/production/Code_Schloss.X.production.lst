

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Mar 05 12:08:24 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F15355
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.30
    42                           ; Generated 15/09/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F15355 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  0010                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0016                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  009B                     	;# 
   100  009B                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  0119                     	;# 
   106  0119                     	;# 
   107  0119                     	;# 
   108  011A                     	;# 
   109  011A                     	;# 
   110  011A                     	;# 
   111  011B                     	;# 
   112  011B                     	;# 
   113  011B                     	;# 
   114  011B                     	;# 
   115  011B                     	;# 
   116  011C                     	;# 
   117  011C                     	;# 
   118  011C                     	;# 
   119  011D                     	;# 
   120  011D                     	;# 
   121  011D                     	;# 
   122  011E                     	;# 
   123  011E                     	;# 
   124  011E                     	;# 
   125  011F                     	;# 
   126  011F                     	;# 
   127  011F                     	;# 
   128  011F                     	;# 
   129  011F                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  018E                     	;# 
   133  018F                     	;# 
   134  0190                     	;# 
   135  0191                     	;# 
   136  0192                     	;# 
   137  0196                     	;# 
   138  0197                     	;# 
   139  0198                     	;# 
   140  0199                     	;# 
   141  019A                     	;# 
   142  019B                     	;# 
   143  019C                     	;# 
   144  020C                     	;# 
   145  020C                     	;# 
   146  020D                     	;# 
   147  020E                     	;# 
   148  020F                     	;# 
   149  020F                     	;# 
   150  0210                     	;# 
   151  0210                     	;# 
   152  0211                     	;# 
   153  0211                     	;# 
   154  028C                     	;# 
   155  028C                     	;# 
   156  028D                     	;# 
   157  028D                     	;# 
   158  028E                     	;# 
   159  028F                     	;# 
   160  0290                     	;# 
   161  0291                     	;# 
   162  030C                     	;# 
   163  030C                     	;# 
   164  030D                     	;# 
   165  030E                     	;# 
   166  030F                     	;# 
   167  0310                     	;# 
   168  0310                     	;# 
   169  0311                     	;# 
   170  0312                     	;# 
   171  0313                     	;# 
   172  0314                     	;# 
   173  0314                     	;# 
   174  0315                     	;# 
   175  0316                     	;# 
   176  0318                     	;# 
   177  0318                     	;# 
   178  0319                     	;# 
   179  031A                     	;# 
   180  031C                     	;# 
   181  031C                     	;# 
   182  031D                     	;# 
   183  031E                     	;# 
   184  038C                     	;# 
   185  038C                     	;# 
   186  038D                     	;# 
   187  038E                     	;# 
   188  058C                     	;# 
   189  058C                     	;# 
   190  058D                     	;# 
   191  058E                     	;# 
   192  058F                     	;# 
   193  058F                     	;# 
   194  0590                     	;# 
   195  0591                     	;# 
   196  0592                     	;# 
   197  0593                     	;# 
   198  059C                     	;# 
   199  059C                     	;# 
   200  059D                     	;# 
   201  059D                     	;# 
   202  059E                     	;# 
   203  059F                     	;# 
   204  060C                     	;# 
   205  060D                     	;# 
   206  060E                     	;# 
   207  060F                     	;# 
   208  0610                     	;# 
   209  0611                     	;# 
   210  0612                     	;# 
   211  0613                     	;# 
   212  0614                     	;# 
   213  070C                     	;# 
   214  070D                     	;# 
   215  070E                     	;# 
   216  070F                     	;# 
   217  0710                     	;# 
   218  0711                     	;# 
   219  0712                     	;# 
   220  0713                     	;# 
   221  0716                     	;# 
   222  0717                     	;# 
   223  0718                     	;# 
   224  0719                     	;# 
   225  071A                     	;# 
   226  071B                     	;# 
   227  071C                     	;# 
   228  071D                     	;# 
   229  0796                     	;# 
   230  0797                     	;# 
   231  0798                     	;# 
   232  0799                     	;# 
   233  079A                     	;# 
   234  079B                     	;# 
   235  080C                     	;# 
   236  080D                     	;# 
   237  080E                     	;# 
   238  080F                     	;# 
   239  0810                     	;# 
   240  0811                     	;# 
   241  0812                     	;# 
   242  0813                     	;# 
   243  0814                     	;# 
   244  081A                     	;# 
   245  081A                     	;# 
   246  081B                     	;# 
   247  081C                     	;# 
   248  081C                     	;# 
   249  081D                     	;# 
   250  081E                     	;# 
   251  081F                     	;# 
   252  088C                     	;# 
   253  088D                     	;# 
   254  088E                     	;# 
   255  088F                     	;# 
   256  0890                     	;# 
   257  0891                     	;# 
   258  0892                     	;# 
   259  0893                     	;# 
   260  0895                     	;# 
   261  0896                     	;# 
   262  090C                     	;# 
   263  090E                     	;# 
   264  090F                     	;# 
   265  091F                     	;# 
   266  098F                     	;# 
   267  098F                     	;# 
   268  0990                     	;# 
   269  0991                     	;# 
   270  0992                     	;# 
   271  0993                     	;# 
   272  0994                     	;# 
   273  0995                     	;# 
   274  0996                     	;# 
   275  0997                     	;# 
   276  0A19                     	;# 
   277  0A19                     	;# 
   278  0A1A                     	;# 
   279  0A1A                     	;# 
   280  0A1B                     	;# 
   281  0A1B                     	;# 
   282  0A1B                     	;# 
   283  0A1C                     	;# 
   284  0A1C                     	;# 
   285  0A1D                     	;# 
   286  0A1D                     	;# 
   287  0A1E                     	;# 
   288  0A1E                     	;# 
   289  0A1F                     	;# 
   290  0A1F                     	;# 
   291  0A1F                     	;# 
   292  1E0F                     	;# 
   293  1E10                     	;# 
   294  1E11                     	;# 
   295  1E12                     	;# 
   296  1E13                     	;# 
   297  1E14                     	;# 
   298  1E15                     	;# 
   299  1E16                     	;# 
   300  1E17                     	;# 
   301  1E18                     	;# 
   302  1E19                     	;# 
   303  1E1A                     	;# 
   304  1E1B                     	;# 
   305  1E1C                     	;# 
   306  1E1D                     	;# 
   307  1E1E                     	;# 
   308  1E1F                     	;# 
   309  1E20                     	;# 
   310  1E21                     	;# 
   311  1E22                     	;# 
   312  1E23                     	;# 
   313  1E24                     	;# 
   314  1E25                     	;# 
   315  1E26                     	;# 
   316  1E27                     	;# 
   317  1E28                     	;# 
   318  1E29                     	;# 
   319  1E2A                     	;# 
   320  1E2B                     	;# 
   321  1E2C                     	;# 
   322  1E2D                     	;# 
   323  1E2E                     	;# 
   324  1E2F                     	;# 
   325  1E30                     	;# 
   326  1E31                     	;# 
   327  1E32                     	;# 
   328  1E33                     	;# 
   329  1E34                     	;# 
   330  1E35                     	;# 
   331  1E36                     	;# 
   332  1E37                     	;# 
   333  1E8F                     	;# 
   334  1E90                     	;# 
   335  1E91                     	;# 
   336  1E92                     	;# 
   337  1E93                     	;# 
   338  1E9C                     	;# 
   339  1EA1                     	;# 
   340  1EA2                     	;# 
   341  1EB1                     	;# 
   342  1EBB                     	;# 
   343  1EBC                     	;# 
   344  1EBD                     	;# 
   345  1EBE                     	;# 
   346  1EC3                     	;# 
   347  1EC5                     	;# 
   348  1EC6                     	;# 
   349  1EC7                     	;# 
   350  1EC8                     	;# 
   351  1EC9                     	;# 
   352  1ECA                     	;# 
   353  1ECB                     	;# 
   354  1ECC                     	;# 
   355  1ECD                     	;# 
   356  1ECE                     	;# 
   357  1F10                     	;# 
   358  1F11                     	;# 
   359  1F12                     	;# 
   360  1F13                     	;# 
   361  1F14                     	;# 
   362  1F15                     	;# 
   363  1F16                     	;# 
   364  1F17                     	;# 
   365  1F18                     	;# 
   366  1F19                     	;# 
   367  1F1A                     	;# 
   368  1F1B                     	;# 
   369  1F1C                     	;# 
   370  1F1D                     	;# 
   371  1F1E                     	;# 
   372  1F1F                     	;# 
   373  1F20                     	;# 
   374  1F21                     	;# 
   375  1F22                     	;# 
   376  1F23                     	;# 
   377  1F24                     	;# 
   378  1F25                     	;# 
   379  1F26                     	;# 
   380  1F27                     	;# 
   381  1F38                     	;# 
   382  1F39                     	;# 
   383  1F3A                     	;# 
   384  1F3B                     	;# 
   385  1F3C                     	;# 
   386  1F3D                     	;# 
   387  1F3E                     	;# 
   388  1F3F                     	;# 
   389  1F43                     	;# 
   390  1F44                     	;# 
   391  1F45                     	;# 
   392  1F46                     	;# 
   393  1F47                     	;# 
   394  1F48                     	;# 
   395  1F49                     	;# 
   396  1F4A                     	;# 
   397  1F4E                     	;# 
   398  1F4F                     	;# 
   399  1F50                     	;# 
   400  1F51                     	;# 
   401  1F52                     	;# 
   402  1F53                     	;# 
   403  1F54                     	;# 
   404  1F55                     	;# 
   405  1F65                     	;# 
   406  1F68                     	;# 
   407  1F69                     	;# 
   408  1F6A                     	;# 
   409  1F6B                     	;# 
   410  1FE4                     	;# 
   411  1FE5                     	;# 
   412  1FE6                     	;# 
   413  1FE7                     	;# 
   414  1FE8                     	;# 
   415  1FE8                     	;# 
   416  1FE9                     	;# 
   417  1FEA                     	;# 
   418  1FEA                     	;# 
   419  1FEB                     	;# 
   420  1FED                     	;# 
   421  1FEE                     	;# 
   422  1FEF                     	;# 
   423  0000                     	;# 
   424  0001                     	;# 
   425  0002                     	;# 
   426  0003                     	;# 
   427  0004                     	;# 
   428  0005                     	;# 
   429  0006                     	;# 
   430  0007                     	;# 
   431  0008                     	;# 
   432  0009                     	;# 
   433  000A                     	;# 
   434  000B                     	;# 
   435  000C                     	;# 
   436  000D                     	;# 
   437  000E                     	;# 
   438  0010                     	;# 
   439  0012                     	;# 
   440  0013                     	;# 
   441  0014                     	;# 
   442  0016                     	;# 
   443  0018                     	;# 
   444  0019                     	;# 
   445  001A                     	;# 
   446  009B                     	;# 
   447  009B                     	;# 
   448  009C                     	;# 
   449  009D                     	;# 
   450  009E                     	;# 
   451  009F                     	;# 
   452  0119                     	;# 
   453  0119                     	;# 
   454  0119                     	;# 
   455  011A                     	;# 
   456  011A                     	;# 
   457  011A                     	;# 
   458  011B                     	;# 
   459  011B                     	;# 
   460  011B                     	;# 
   461  011B                     	;# 
   462  011B                     	;# 
   463  011C                     	;# 
   464  011C                     	;# 
   465  011C                     	;# 
   466  011D                     	;# 
   467  011D                     	;# 
   468  011D                     	;# 
   469  011E                     	;# 
   470  011E                     	;# 
   471  011E                     	;# 
   472  011F                     	;# 
   473  011F                     	;# 
   474  011F                     	;# 
   475  011F                     	;# 
   476  011F                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479  018E                     	;# 
   480  018F                     	;# 
   481  0190                     	;# 
   482  0191                     	;# 
   483  0192                     	;# 
   484  0196                     	;# 
   485  0197                     	;# 
   486  0198                     	;# 
   487  0199                     	;# 
   488  019A                     	;# 
   489  019B                     	;# 
   490  019C                     	;# 
   491  020C                     	;# 
   492  020C                     	;# 
   493  020D                     	;# 
   494  020E                     	;# 
   495  020F                     	;# 
   496  020F                     	;# 
   497  0210                     	;# 
   498  0210                     	;# 
   499  0211                     	;# 
   500  0211                     	;# 
   501  028C                     	;# 
   502  028C                     	;# 
   503  028D                     	;# 
   504  028D                     	;# 
   505  028E                     	;# 
   506  028F                     	;# 
   507  0290                     	;# 
   508  0291                     	;# 
   509  030C                     	;# 
   510  030C                     	;# 
   511  030D                     	;# 
   512  030E                     	;# 
   513  030F                     	;# 
   514  0310                     	;# 
   515  0310                     	;# 
   516  0311                     	;# 
   517  0312                     	;# 
   518  0313                     	;# 
   519  0314                     	;# 
   520  0314                     	;# 
   521  0315                     	;# 
   522  0316                     	;# 
   523  0318                     	;# 
   524  0318                     	;# 
   525  0319                     	;# 
   526  031A                     	;# 
   527  031C                     	;# 
   528  031C                     	;# 
   529  031D                     	;# 
   530  031E                     	;# 
   531  038C                     	;# 
   532  038C                     	;# 
   533  038D                     	;# 
   534  038E                     	;# 
   535  058C                     	;# 
   536  058C                     	;# 
   537  058D                     	;# 
   538  058E                     	;# 
   539  058F                     	;# 
   540  058F                     	;# 
   541  0590                     	;# 
   542  0591                     	;# 
   543  0592                     	;# 
   544  0593                     	;# 
   545  059C                     	;# 
   546  059C                     	;# 
   547  059D                     	;# 
   548  059D                     	;# 
   549  059E                     	;# 
   550  059F                     	;# 
   551  060C                     	;# 
   552  060D                     	;# 
   553  060E                     	;# 
   554  060F                     	;# 
   555  0610                     	;# 
   556  0611                     	;# 
   557  0612                     	;# 
   558  0613                     	;# 
   559  0614                     	;# 
   560  070C                     	;# 
   561  070D                     	;# 
   562  070E                     	;# 
   563  070F                     	;# 
   564  0710                     	;# 
   565  0711                     	;# 
   566  0712                     	;# 
   567  0713                     	;# 
   568  0716                     	;# 
   569  0717                     	;# 
   570  0718                     	;# 
   571  0719                     	;# 
   572  071A                     	;# 
   573  071B                     	;# 
   574  071C                     	;# 
   575  071D                     	;# 
   576  0796                     	;# 
   577  0797                     	;# 
   578  0798                     	;# 
   579  0799                     	;# 
   580  079A                     	;# 
   581  079B                     	;# 
   582  080C                     	;# 
   583  080D                     	;# 
   584  080E                     	;# 
   585  080F                     	;# 
   586  0810                     	;# 
   587  0811                     	;# 
   588  0812                     	;# 
   589  0813                     	;# 
   590  0814                     	;# 
   591  081A                     	;# 
   592  081A                     	;# 
   593  081B                     	;# 
   594  081C                     	;# 
   595  081C                     	;# 
   596  081D                     	;# 
   597  081E                     	;# 
   598  081F                     	;# 
   599  088C                     	;# 
   600  088D                     	;# 
   601  088E                     	;# 
   602  088F                     	;# 
   603  0890                     	;# 
   604  0891                     	;# 
   605  0892                     	;# 
   606  0893                     	;# 
   607  0895                     	;# 
   608  0896                     	;# 
   609  090C                     	;# 
   610  090E                     	;# 
   611  090F                     	;# 
   612  091F                     	;# 
   613  098F                     	;# 
   614  098F                     	;# 
   615  0990                     	;# 
   616  0991                     	;# 
   617  0992                     	;# 
   618  0993                     	;# 
   619  0994                     	;# 
   620  0995                     	;# 
   621  0996                     	;# 
   622  0997                     	;# 
   623  0A19                     	;# 
   624  0A19                     	;# 
   625  0A1A                     	;# 
   626  0A1A                     	;# 
   627  0A1B                     	;# 
   628  0A1B                     	;# 
   629  0A1B                     	;# 
   630  0A1C                     	;# 
   631  0A1C                     	;# 
   632  0A1D                     	;# 
   633  0A1D                     	;# 
   634  0A1E                     	;# 
   635  0A1E                     	;# 
   636  0A1F                     	;# 
   637  0A1F                     	;# 
   638  0A1F                     	;# 
   639  1E0F                     	;# 
   640  1E10                     	;# 
   641  1E11                     	;# 
   642  1E12                     	;# 
   643  1E13                     	;# 
   644  1E14                     	;# 
   645  1E15                     	;# 
   646  1E16                     	;# 
   647  1E17                     	;# 
   648  1E18                     	;# 
   649  1E19                     	;# 
   650  1E1A                     	;# 
   651  1E1B                     	;# 
   652  1E1C                     	;# 
   653  1E1D                     	;# 
   654  1E1E                     	;# 
   655  1E1F                     	;# 
   656  1E20                     	;# 
   657  1E21                     	;# 
   658  1E22                     	;# 
   659  1E23                     	;# 
   660  1E24                     	;# 
   661  1E25                     	;# 
   662  1E26                     	;# 
   663  1E27                     	;# 
   664  1E28                     	;# 
   665  1E29                     	;# 
   666  1E2A                     	;# 
   667  1E2B                     	;# 
   668  1E2C                     	;# 
   669  1E2D                     	;# 
   670  1E2E                     	;# 
   671  1E2F                     	;# 
   672  1E30                     	;# 
   673  1E31                     	;# 
   674  1E32                     	;# 
   675  1E33                     	;# 
   676  1E34                     	;# 
   677  1E35                     	;# 
   678  1E36                     	;# 
   679  1E37                     	;# 
   680  1E8F                     	;# 
   681  1E90                     	;# 
   682  1E91                     	;# 
   683  1E92                     	;# 
   684  1E93                     	;# 
   685  1E9C                     	;# 
   686  1EA1                     	;# 
   687  1EA2                     	;# 
   688  1EB1                     	;# 
   689  1EBB                     	;# 
   690  1EBC                     	;# 
   691  1EBD                     	;# 
   692  1EBE                     	;# 
   693  1EC3                     	;# 
   694  1EC5                     	;# 
   695  1EC6                     	;# 
   696  1EC7                     	;# 
   697  1EC8                     	;# 
   698  1EC9                     	;# 
   699  1ECA                     	;# 
   700  1ECB                     	;# 
   701  1ECC                     	;# 
   702  1ECD                     	;# 
   703  1ECE                     	;# 
   704  1F10                     	;# 
   705  1F11                     	;# 
   706  1F12                     	;# 
   707  1F13                     	;# 
   708  1F14                     	;# 
   709  1F15                     	;# 
   710  1F16                     	;# 
   711  1F17                     	;# 
   712  1F18                     	;# 
   713  1F19                     	;# 
   714  1F1A                     	;# 
   715  1F1B                     	;# 
   716  1F1C                     	;# 
   717  1F1D                     	;# 
   718  1F1E                     	;# 
   719  1F1F                     	;# 
   720  1F20                     	;# 
   721  1F21                     	;# 
   722  1F22                     	;# 
   723  1F23                     	;# 
   724  1F24                     	;# 
   725  1F25                     	;# 
   726  1F26                     	;# 
   727  1F27                     	;# 
   728  1F38                     	;# 
   729  1F39                     	;# 
   730  1F3A                     	;# 
   731  1F3B                     	;# 
   732  1F3C                     	;# 
   733  1F3D                     	;# 
   734  1F3E                     	;# 
   735  1F3F                     	;# 
   736  1F43                     	;# 
   737  1F44                     	;# 
   738  1F45                     	;# 
   739  1F46                     	;# 
   740  1F47                     	;# 
   741  1F48                     	;# 
   742  1F49                     	;# 
   743  1F4A                     	;# 
   744  1F4E                     	;# 
   745  1F4F                     	;# 
   746  1F50                     	;# 
   747  1F51                     	;# 
   748  1F52                     	;# 
   749  1F53                     	;# 
   750  1F54                     	;# 
   751  1F55                     	;# 
   752  1F65                     	;# 
   753  1F68                     	;# 
   754  1F69                     	;# 
   755  1F6A                     	;# 
   756  1F6B                     	;# 
   757  1FE4                     	;# 
   758  1FE5                     	;# 
   759  1FE6                     	;# 
   760  1FE7                     	;# 
   761  1FE8                     	;# 
   762  1FE8                     	;# 
   763  1FE9                     	;# 
   764  1FEA                     	;# 
   765  1FEA                     	;# 
   766  1FEB                     	;# 
   767  1FED                     	;# 
   768  1FEE                     	;# 
   769  1FEF                     	;# 
   770  0000                     	;# 
   771  0001                     	;# 
   772  0002                     	;# 
   773  0003                     	;# 
   774  0004                     	;# 
   775  0005                     	;# 
   776  0006                     	;# 
   777  0007                     	;# 
   778  0008                     	;# 
   779  0009                     	;# 
   780  000A                     	;# 
   781  000B                     	;# 
   782  000C                     	;# 
   783  000D                     	;# 
   784  000E                     	;# 
   785  0010                     	;# 
   786  0012                     	;# 
   787  0013                     	;# 
   788  0014                     	;# 
   789  0016                     	;# 
   790  0018                     	;# 
   791  0019                     	;# 
   792  001A                     	;# 
   793  009B                     	;# 
   794  009B                     	;# 
   795  009C                     	;# 
   796  009D                     	;# 
   797  009E                     	;# 
   798  009F                     	;# 
   799  0119                     	;# 
   800  0119                     	;# 
   801  0119                     	;# 
   802  011A                     	;# 
   803  011A                     	;# 
   804  011A                     	;# 
   805  011B                     	;# 
   806  011B                     	;# 
   807  011B                     	;# 
   808  011B                     	;# 
   809  011B                     	;# 
   810  011C                     	;# 
   811  011C                     	;# 
   812  011C                     	;# 
   813  011D                     	;# 
   814  011D                     	;# 
   815  011D                     	;# 
   816  011E                     	;# 
   817  011E                     	;# 
   818  011E                     	;# 
   819  011F                     	;# 
   820  011F                     	;# 
   821  011F                     	;# 
   822  011F                     	;# 
   823  011F                     	;# 
   824  018C                     	;# 
   825  018D                     	;# 
   826  018E                     	;# 
   827  018F                     	;# 
   828  0190                     	;# 
   829  0191                     	;# 
   830  0192                     	;# 
   831  0196                     	;# 
   832  0197                     	;# 
   833  0198                     	;# 
   834  0199                     	;# 
   835  019A                     	;# 
   836  019B                     	;# 
   837  019C                     	;# 
   838  020C                     	;# 
   839  020C                     	;# 
   840  020D                     	;# 
   841  020E                     	;# 
   842  020F                     	;# 
   843  020F                     	;# 
   844  0210                     	;# 
   845  0210                     	;# 
   846  0211                     	;# 
   847  0211                     	;# 
   848  028C                     	;# 
   849  028C                     	;# 
   850  028D                     	;# 
   851  028D                     	;# 
   852  028E                     	;# 
   853  028F                     	;# 
   854  0290                     	;# 
   855  0291                     	;# 
   856  030C                     	;# 
   857  030C                     	;# 
   858  030D                     	;# 
   859  030E                     	;# 
   860  030F                     	;# 
   861  0310                     	;# 
   862  0310                     	;# 
   863  0311                     	;# 
   864  0312                     	;# 
   865  0313                     	;# 
   866  0314                     	;# 
   867  0314                     	;# 
   868  0315                     	;# 
   869  0316                     	;# 
   870  0318                     	;# 
   871  0318                     	;# 
   872  0319                     	;# 
   873  031A                     	;# 
   874  031C                     	;# 
   875  031C                     	;# 
   876  031D                     	;# 
   877  031E                     	;# 
   878  038C                     	;# 
   879  038C                     	;# 
   880  038D                     	;# 
   881  038E                     	;# 
   882  058C                     	;# 
   883  058C                     	;# 
   884  058D                     	;# 
   885  058E                     	;# 
   886  058F                     	;# 
   887  058F                     	;# 
   888  0590                     	;# 
   889  0591                     	;# 
   890  0592                     	;# 
   891  0593                     	;# 
   892  059C                     	;# 
   893  059C                     	;# 
   894  059D                     	;# 
   895  059D                     	;# 
   896  059E                     	;# 
   897  059F                     	;# 
   898  060C                     	;# 
   899  060D                     	;# 
   900  060E                     	;# 
   901  060F                     	;# 
   902  0610                     	;# 
   903  0611                     	;# 
   904  0612                     	;# 
   905  0613                     	;# 
   906  0614                     	;# 
   907  070C                     	;# 
   908  070D                     	;# 
   909  070E                     	;# 
   910  070F                     	;# 
   911  0710                     	;# 
   912  0711                     	;# 
   913  0712                     	;# 
   914  0713                     	;# 
   915  0716                     	;# 
   916  0717                     	;# 
   917  0718                     	;# 
   918  0719                     	;# 
   919  071A                     	;# 
   920  071B                     	;# 
   921  071C                     	;# 
   922  071D                     	;# 
   923  0796                     	;# 
   924  0797                     	;# 
   925  0798                     	;# 
   926  0799                     	;# 
   927  079A                     	;# 
   928  079B                     	;# 
   929  080C                     	;# 
   930  080D                     	;# 
   931  080E                     	;# 
   932  080F                     	;# 
   933  0810                     	;# 
   934  0811                     	;# 
   935  0812                     	;# 
   936  0813                     	;# 
   937  0814                     	;# 
   938  081A                     	;# 
   939  081A                     	;# 
   940  081B                     	;# 
   941  081C                     	;# 
   942  081C                     	;# 
   943  081D                     	;# 
   944  081E                     	;# 
   945  081F                     	;# 
   946  088C                     	;# 
   947  088D                     	;# 
   948  088E                     	;# 
   949  088F                     	;# 
   950  0890                     	;# 
   951  0891                     	;# 
   952  0892                     	;# 
   953  0893                     	;# 
   954  0895                     	;# 
   955  0896                     	;# 
   956  090C                     	;# 
   957  090E                     	;# 
   958  090F                     	;# 
   959  091F                     	;# 
   960  098F                     	;# 
   961  098F                     	;# 
   962  0990                     	;# 
   963  0991                     	;# 
   964  0992                     	;# 
   965  0993                     	;# 
   966  0994                     	;# 
   967  0995                     	;# 
   968  0996                     	;# 
   969  0997                     	;# 
   970  0A19                     	;# 
   971  0A19                     	;# 
   972  0A1A                     	;# 
   973  0A1A                     	;# 
   974  0A1B                     	;# 
   975  0A1B                     	;# 
   976  0A1B                     	;# 
   977  0A1C                     	;# 
   978  0A1C                     	;# 
   979  0A1D                     	;# 
   980  0A1D                     	;# 
   981  0A1E                     	;# 
   982  0A1E                     	;# 
   983  0A1F                     	;# 
   984  0A1F                     	;# 
   985  0A1F                     	;# 
   986  1E0F                     	;# 
   987  1E10                     	;# 
   988  1E11                     	;# 
   989  1E12                     	;# 
   990  1E13                     	;# 
   991  1E14                     	;# 
   992  1E15                     	;# 
   993  1E16                     	;# 
   994  1E17                     	;# 
   995  1E18                     	;# 
   996  1E19                     	;# 
   997  1E1A                     	;# 
   998  1E1B                     	;# 
   999  1E1C                     	;# 
  1000  1E1D                     	;# 
  1001  1E1E                     	;# 
  1002  1E1F                     	;# 
  1003  1E20                     	;# 
  1004  1E21                     	;# 
  1005  1E22                     	;# 
  1006  1E23                     	;# 
  1007  1E24                     	;# 
  1008  1E25                     	;# 
  1009  1E26                     	;# 
  1010  1E27                     	;# 
  1011  1E28                     	;# 
  1012  1E29                     	;# 
  1013  1E2A                     	;# 
  1014  1E2B                     	;# 
  1015  1E2C                     	;# 
  1016  1E2D                     	;# 
  1017  1E2E                     	;# 
  1018  1E2F                     	;# 
  1019  1E30                     	;# 
  1020  1E31                     	;# 
  1021  1E32                     	;# 
  1022  1E33                     	;# 
  1023  1E34                     	;# 
  1024  1E35                     	;# 
  1025  1E36                     	;# 
  1026  1E37                     	;# 
  1027  1E8F                     	;# 
  1028  1E90                     	;# 
  1029  1E91                     	;# 
  1030  1E92                     	;# 
  1031  1E93                     	;# 
  1032  1E9C                     	;# 
  1033  1EA1                     	;# 
  1034  1EA2                     	;# 
  1035  1EB1                     	;# 
  1036  1EBB                     	;# 
  1037  1EBC                     	;# 
  1038  1EBD                     	;# 
  1039  1EBE                     	;# 
  1040  1EC3                     	;# 
  1041  1EC5                     	;# 
  1042  1EC6                     	;# 
  1043  1EC7                     	;# 
  1044  1EC8                     	;# 
  1045  1EC9                     	;# 
  1046  1ECA                     	;# 
  1047  1ECB                     	;# 
  1048  1ECC                     	;# 
  1049  1ECD                     	;# 
  1050  1ECE                     	;# 
  1051  1F10                     	;# 
  1052  1F11                     	;# 
  1053  1F12                     	;# 
  1054  1F13                     	;# 
  1055  1F14                     	;# 
  1056  1F15                     	;# 
  1057  1F16                     	;# 
  1058  1F17                     	;# 
  1059  1F18                     	;# 
  1060  1F19                     	;# 
  1061  1F1A                     	;# 
  1062  1F1B                     	;# 
  1063  1F1C                     	;# 
  1064  1F1D                     	;# 
  1065  1F1E                     	;# 
  1066  1F1F                     	;# 
  1067  1F20                     	;# 
  1068  1F21                     	;# 
  1069  1F22                     	;# 
  1070  1F23                     	;# 
  1071  1F24                     	;# 
  1072  1F25                     	;# 
  1073  1F26                     	;# 
  1074  1F27                     	;# 
  1075  1F38                     	;# 
  1076  1F39                     	;# 
  1077  1F3A                     	;# 
  1078  1F3B                     	;# 
  1079  1F3C                     	;# 
  1080  1F3D                     	;# 
  1081  1F3E                     	;# 
  1082  1F3F                     	;# 
  1083  1F43                     	;# 
  1084  1F44                     	;# 
  1085  1F45                     	;# 
  1086  1F46                     	;# 
  1087  1F47                     	;# 
  1088  1F48                     	;# 
  1089  1F49                     	;# 
  1090  1F4A                     	;# 
  1091  1F4E                     	;# 
  1092  1F4F                     	;# 
  1093  1F50                     	;# 
  1094  1F51                     	;# 
  1095  1F52                     	;# 
  1096  1F53                     	;# 
  1097  1F54                     	;# 
  1098  1F55                     	;# 
  1099  1F65                     	;# 
  1100  1F68                     	;# 
  1101  1F69                     	;# 
  1102  1F6A                     	;# 
  1103  1F6B                     	;# 
  1104  1FE4                     	;# 
  1105  1FE5                     	;# 
  1106  1FE6                     	;# 
  1107  1FE7                     	;# 
  1108  1FE8                     	;# 
  1109  1FE8                     	;# 
  1110  1FE9                     	;# 
  1111  1FEA                     	;# 
  1112  1FEA                     	;# 
  1113  1FEB                     	;# 
  1114  1FED                     	;# 
  1115  1FEE                     	;# 
  1116  1FEF                     	;# 
  1117  0000                     	;# 
  1118  0001                     	;# 
  1119  0002                     	;# 
  1120  0003                     	;# 
  1121  0004                     	;# 
  1122  0005                     	;# 
  1123  0006                     	;# 
  1124  0007                     	;# 
  1125  0008                     	;# 
  1126  0009                     	;# 
  1127  000A                     	;# 
  1128  000B                     	;# 
  1129  000C                     	;# 
  1130  000D                     	;# 
  1131  000E                     	;# 
  1132  0010                     	;# 
  1133  0012                     	;# 
  1134  0013                     	;# 
  1135  0014                     	;# 
  1136  0016                     	;# 
  1137  0018                     	;# 
  1138  0019                     	;# 
  1139  001A                     	;# 
  1140  009B                     	;# 
  1141  009B                     	;# 
  1142  009C                     	;# 
  1143  009D                     	;# 
  1144  009E                     	;# 
  1145  009F                     	;# 
  1146  0119                     	;# 
  1147  0119                     	;# 
  1148  0119                     	;# 
  1149  011A                     	;# 
  1150  011A                     	;# 
  1151  011A                     	;# 
  1152  011B                     	;# 
  1153  011B                     	;# 
  1154  011B                     	;# 
  1155  011B                     	;# 
  1156  011B                     	;# 
  1157  011C                     	;# 
  1158  011C                     	;# 
  1159  011C                     	;# 
  1160  011D                     	;# 
  1161  011D                     	;# 
  1162  011D                     	;# 
  1163  011E                     	;# 
  1164  011E                     	;# 
  1165  011E                     	;# 
  1166  011F                     	;# 
  1167  011F                     	;# 
  1168  011F                     	;# 
  1169  011F                     	;# 
  1170  011F                     	;# 
  1171  018C                     	;# 
  1172  018D                     	;# 
  1173  018E                     	;# 
  1174  018F                     	;# 
  1175  0190                     	;# 
  1176  0191                     	;# 
  1177  0192                     	;# 
  1178  0196                     	;# 
  1179  0197                     	;# 
  1180  0198                     	;# 
  1181  0199                     	;# 
  1182  019A                     	;# 
  1183  019B                     	;# 
  1184  019C                     	;# 
  1185  020C                     	;# 
  1186  020C                     	;# 
  1187  020D                     	;# 
  1188  020E                     	;# 
  1189  020F                     	;# 
  1190  020F                     	;# 
  1191  0210                     	;# 
  1192  0210                     	;# 
  1193  0211                     	;# 
  1194  0211                     	;# 
  1195  028C                     	;# 
  1196  028C                     	;# 
  1197  028D                     	;# 
  1198  028D                     	;# 
  1199  028E                     	;# 
  1200  028F                     	;# 
  1201  0290                     	;# 
  1202  0291                     	;# 
  1203  030C                     	;# 
  1204  030C                     	;# 
  1205  030D                     	;# 
  1206  030E                     	;# 
  1207  030F                     	;# 
  1208  0310                     	;# 
  1209  0310                     	;# 
  1210  0311                     	;# 
  1211  0312                     	;# 
  1212  0313                     	;# 
  1213  0314                     	;# 
  1214  0314                     	;# 
  1215  0315                     	;# 
  1216  0316                     	;# 
  1217  0318                     	;# 
  1218  0318                     	;# 
  1219  0319                     	;# 
  1220  031A                     	;# 
  1221  031C                     	;# 
  1222  031C                     	;# 
  1223  031D                     	;# 
  1224  031E                     	;# 
  1225  038C                     	;# 
  1226  038C                     	;# 
  1227  038D                     	;# 
  1228  038E                     	;# 
  1229  058C                     	;# 
  1230  058C                     	;# 
  1231  058D                     	;# 
  1232  058E                     	;# 
  1233  058F                     	;# 
  1234  058F                     	;# 
  1235  0590                     	;# 
  1236  0591                     	;# 
  1237  0592                     	;# 
  1238  0593                     	;# 
  1239  059C                     	;# 
  1240  059C                     	;# 
  1241  059D                     	;# 
  1242  059D                     	;# 
  1243  059E                     	;# 
  1244  059F                     	;# 
  1245  060C                     	;# 
  1246  060D                     	;# 
  1247  060E                     	;# 
  1248  060F                     	;# 
  1249  0610                     	;# 
  1250  0611                     	;# 
  1251  0612                     	;# 
  1252  0613                     	;# 
  1253  0614                     	;# 
  1254  070C                     	;# 
  1255  070D                     	;# 
  1256  070E                     	;# 
  1257  070F                     	;# 
  1258  0710                     	;# 
  1259  0711                     	;# 
  1260  0712                     	;# 
  1261  0713                     	;# 
  1262  0716                     	;# 
  1263  0717                     	;# 
  1264  0718                     	;# 
  1265  0719                     	;# 
  1266  071A                     	;# 
  1267  071B                     	;# 
  1268  071C                     	;# 
  1269  071D                     	;# 
  1270  0796                     	;# 
  1271  0797                     	;# 
  1272  0798                     	;# 
  1273  0799                     	;# 
  1274  079A                     	;# 
  1275  079B                     	;# 
  1276  080C                     	;# 
  1277  080D                     	;# 
  1278  080E                     	;# 
  1279  080F                     	;# 
  1280  0810                     	;# 
  1281  0811                     	;# 
  1282  0812                     	;# 
  1283  0813                     	;# 
  1284  0814                     	;# 
  1285  081A                     	;# 
  1286  081A                     	;# 
  1287  081B                     	;# 
  1288  081C                     	;# 
  1289  081C                     	;# 
  1290  081D                     	;# 
  1291  081E                     	;# 
  1292  081F                     	;# 
  1293  088C                     	;# 
  1294  088D                     	;# 
  1295  088E                     	;# 
  1296  088F                     	;# 
  1297  0890                     	;# 
  1298  0891                     	;# 
  1299  0892                     	;# 
  1300  0893                     	;# 
  1301  0895                     	;# 
  1302  0896                     	;# 
  1303  090C                     	;# 
  1304  090E                     	;# 
  1305  090F                     	;# 
  1306  091F                     	;# 
  1307  098F                     	;# 
  1308  098F                     	;# 
  1309  0990                     	;# 
  1310  0991                     	;# 
  1311  0992                     	;# 
  1312  0993                     	;# 
  1313  0994                     	;# 
  1314  0995                     	;# 
  1315  0996                     	;# 
  1316  0997                     	;# 
  1317  0A19                     	;# 
  1318  0A19                     	;# 
  1319  0A1A                     	;# 
  1320  0A1A                     	;# 
  1321  0A1B                     	;# 
  1322  0A1B                     	;# 
  1323  0A1B                     	;# 
  1324  0A1C                     	;# 
  1325  0A1C                     	;# 
  1326  0A1D                     	;# 
  1327  0A1D                     	;# 
  1328  0A1E                     	;# 
  1329  0A1E                     	;# 
  1330  0A1F                     	;# 
  1331  0A1F                     	;# 
  1332  0A1F                     	;# 
  1333  1E0F                     	;# 
  1334  1E10                     	;# 
  1335  1E11                     	;# 
  1336  1E12                     	;# 
  1337  1E13                     	;# 
  1338  1E14                     	;# 
  1339  1E15                     	;# 
  1340  1E16                     	;# 
  1341  1E17                     	;# 
  1342  1E18                     	;# 
  1343  1E19                     	;# 
  1344  1E1A                     	;# 
  1345  1E1B                     	;# 
  1346  1E1C                     	;# 
  1347  1E1D                     	;# 
  1348  1E1E                     	;# 
  1349  1E1F                     	;# 
  1350  1E20                     	;# 
  1351  1E21                     	;# 
  1352  1E22                     	;# 
  1353  1E23                     	;# 
  1354  1E24                     	;# 
  1355  1E25                     	;# 
  1356  1E26                     	;# 
  1357  1E27                     	;# 
  1358  1E28                     	;# 
  1359  1E29                     	;# 
  1360  1E2A                     	;# 
  1361  1E2B                     	;# 
  1362  1E2C                     	;# 
  1363  1E2D                     	;# 
  1364  1E2E                     	;# 
  1365  1E2F                     	;# 
  1366  1E30                     	;# 
  1367  1E31                     	;# 
  1368  1E32                     	;# 
  1369  1E33                     	;# 
  1370  1E34                     	;# 
  1371  1E35                     	;# 
  1372  1E36                     	;# 
  1373  1E37                     	;# 
  1374  1E8F                     	;# 
  1375  1E90                     	;# 
  1376  1E91                     	;# 
  1377  1E92                     	;# 
  1378  1E93                     	;# 
  1379  1E9C                     	;# 
  1380  1EA1                     	;# 
  1381  1EA2                     	;# 
  1382  1EB1                     	;# 
  1383  1EBB                     	;# 
  1384  1EBC                     	;# 
  1385  1EBD                     	;# 
  1386  1EBE                     	;# 
  1387  1EC3                     	;# 
  1388  1EC5                     	;# 
  1389  1EC6                     	;# 
  1390  1EC7                     	;# 
  1391  1EC8                     	;# 
  1392  1EC9                     	;# 
  1393  1ECA                     	;# 
  1394  1ECB                     	;# 
  1395  1ECC                     	;# 
  1396  1ECD                     	;# 
  1397  1ECE                     	;# 
  1398  1F10                     	;# 
  1399  1F11                     	;# 
  1400  1F12                     	;# 
  1401  1F13                     	;# 
  1402  1F14                     	;# 
  1403  1F15                     	;# 
  1404  1F16                     	;# 
  1405  1F17                     	;# 
  1406  1F18                     	;# 
  1407  1F19                     	;# 
  1408  1F1A                     	;# 
  1409  1F1B                     	;# 
  1410  1F1C                     	;# 
  1411  1F1D                     	;# 
  1412  1F1E                     	;# 
  1413  1F1F                     	;# 
  1414  1F20                     	;# 
  1415  1F21                     	;# 
  1416  1F22                     	;# 
  1417  1F23                     	;# 
  1418  1F24                     	;# 
  1419  1F25                     	;# 
  1420  1F26                     	;# 
  1421  1F27                     	;# 
  1422  1F38                     	;# 
  1423  1F39                     	;# 
  1424  1F3A                     	;# 
  1425  1F3B                     	;# 
  1426  1F3C                     	;# 
  1427  1F3D                     	;# 
  1428  1F3E                     	;# 
  1429  1F3F                     	;# 
  1430  1F43                     	;# 
  1431  1F44                     	;# 
  1432  1F45                     	;# 
  1433  1F46                     	;# 
  1434  1F47                     	;# 
  1435  1F48                     	;# 
  1436  1F49                     	;# 
  1437  1F4A                     	;# 
  1438  1F4E                     	;# 
  1439  1F4F                     	;# 
  1440  1F50                     	;# 
  1441  1F51                     	;# 
  1442  1F52                     	;# 
  1443  1F53                     	;# 
  1444  1F54                     	;# 
  1445  1F55                     	;# 
  1446  1F65                     	;# 
  1447  1F68                     	;# 
  1448  1F69                     	;# 
  1449  1F6A                     	;# 
  1450  1F6B                     	;# 
  1451  1FE4                     	;# 
  1452  1FE5                     	;# 
  1453  1FE6                     	;# 
  1454  1FE7                     	;# 
  1455  1FE8                     	;# 
  1456  1FE8                     	;# 
  1457  1FE9                     	;# 
  1458  1FEA                     	;# 
  1459  1FEA                     	;# 
  1460  1FEB                     	;# 
  1461  1FED                     	;# 
  1462  1FEE                     	;# 
  1463  1FEF                     	;# 
  1464  0000                     	;# 
  1465  0001                     	;# 
  1466  0002                     	;# 
  1467  0003                     	;# 
  1468  0004                     	;# 
  1469  0005                     	;# 
  1470  0006                     	;# 
  1471  0007                     	;# 
  1472  0008                     	;# 
  1473  0009                     	;# 
  1474  000A                     	;# 
  1475  000B                     	;# 
  1476  000C                     	;# 
  1477  000D                     	;# 
  1478  000E                     	;# 
  1479  0010                     	;# 
  1480  0012                     	;# 
  1481  0013                     	;# 
  1482  0014                     	;# 
  1483  0016                     	;# 
  1484  0018                     	;# 
  1485  0019                     	;# 
  1486  001A                     	;# 
  1487  009B                     	;# 
  1488  009B                     	;# 
  1489  009C                     	;# 
  1490  009D                     	;# 
  1491  009E                     	;# 
  1492  009F                     	;# 
  1493  0119                     	;# 
  1494  0119                     	;# 
  1495  0119                     	;# 
  1496  011A                     	;# 
  1497  011A                     	;# 
  1498  011A                     	;# 
  1499  011B                     	;# 
  1500  011B                     	;# 
  1501  011B                     	;# 
  1502  011B                     	;# 
  1503  011B                     	;# 
  1504  011C                     	;# 
  1505  011C                     	;# 
  1506  011C                     	;# 
  1507  011D                     	;# 
  1508  011D                     	;# 
  1509  011D                     	;# 
  1510  011E                     	;# 
  1511  011E                     	;# 
  1512  011E                     	;# 
  1513  011F                     	;# 
  1514  011F                     	;# 
  1515  011F                     	;# 
  1516  011F                     	;# 
  1517  011F                     	;# 
  1518  018C                     	;# 
  1519  018D                     	;# 
  1520  018E                     	;# 
  1521  018F                     	;# 
  1522  0190                     	;# 
  1523  0191                     	;# 
  1524  0192                     	;# 
  1525  0196                     	;# 
  1526  0197                     	;# 
  1527  0198                     	;# 
  1528  0199                     	;# 
  1529  019A                     	;# 
  1530  019B                     	;# 
  1531  019C                     	;# 
  1532  020C                     	;# 
  1533  020C                     	;# 
  1534  020D                     	;# 
  1535  020E                     	;# 
  1536  020F                     	;# 
  1537  020F                     	;# 
  1538  0210                     	;# 
  1539  0210                     	;# 
  1540  0211                     	;# 
  1541  0211                     	;# 
  1542  028C                     	;# 
  1543  028C                     	;# 
  1544  028D                     	;# 
  1545  028D                     	;# 
  1546  028E                     	;# 
  1547  028F                     	;# 
  1548  0290                     	;# 
  1549  0291                     	;# 
  1550  030C                     	;# 
  1551  030C                     	;# 
  1552  030D                     	;# 
  1553  030E                     	;# 
  1554  030F                     	;# 
  1555  0310                     	;# 
  1556  0310                     	;# 
  1557  0311                     	;# 
  1558  0312                     	;# 
  1559  0313                     	;# 
  1560  0314                     	;# 
  1561  0314                     	;# 
  1562  0315                     	;# 
  1563  0316                     	;# 
  1564  0318                     	;# 
  1565  0318                     	;# 
  1566  0319                     	;# 
  1567  031A                     	;# 
  1568  031C                     	;# 
  1569  031C                     	;# 
  1570  031D                     	;# 
  1571  031E                     	;# 
  1572  038C                     	;# 
  1573  038C                     	;# 
  1574  038D                     	;# 
  1575  038E                     	;# 
  1576  058C                     	;# 
  1577  058C                     	;# 
  1578  058D                     	;# 
  1579  058E                     	;# 
  1580  058F                     	;# 
  1581  058F                     	;# 
  1582  0590                     	;# 
  1583  0591                     	;# 
  1584  0592                     	;# 
  1585  0593                     	;# 
  1586  059C                     	;# 
  1587  059C                     	;# 
  1588  059D                     	;# 
  1589  059D                     	;# 
  1590  059E                     	;# 
  1591  059F                     	;# 
  1592  060C                     	;# 
  1593  060D                     	;# 
  1594  060E                     	;# 
  1595  060F                     	;# 
  1596  0610                     	;# 
  1597  0611                     	;# 
  1598  0612                     	;# 
  1599  0613                     	;# 
  1600  0614                     	;# 
  1601  070C                     	;# 
  1602  070D                     	;# 
  1603  070E                     	;# 
  1604  070F                     	;# 
  1605  0710                     	;# 
  1606  0711                     	;# 
  1607  0712                     	;# 
  1608  0713                     	;# 
  1609  0716                     	;# 
  1610  0717                     	;# 
  1611  0718                     	;# 
  1612  0719                     	;# 
  1613  071A                     	;# 
  1614  071B                     	;# 
  1615  071C                     	;# 
  1616  071D                     	;# 
  1617  0796                     	;# 
  1618  0797                     	;# 
  1619  0798                     	;# 
  1620  0799                     	;# 
  1621  079A                     	;# 
  1622  079B                     	;# 
  1623  080C                     	;# 
  1624  080D                     	;# 
  1625  080E                     	;# 
  1626  080F                     	;# 
  1627  0810                     	;# 
  1628  0811                     	;# 
  1629  0812                     	;# 
  1630  0813                     	;# 
  1631  0814                     	;# 
  1632  081A                     	;# 
  1633  081A                     	;# 
  1634  081B                     	;# 
  1635  081C                     	;# 
  1636  081C                     	;# 
  1637  081D                     	;# 
  1638  081E                     	;# 
  1639  081F                     	;# 
  1640  088C                     	;# 
  1641  088D                     	;# 
  1642  088E                     	;# 
  1643  088F                     	;# 
  1644  0890                     	;# 
  1645  0891                     	;# 
  1646  0892                     	;# 
  1647  0893                     	;# 
  1648  0895                     	;# 
  1649  0896                     	;# 
  1650  090C                     	;# 
  1651  090E                     	;# 
  1652  090F                     	;# 
  1653  091F                     	;# 
  1654  098F                     	;# 
  1655  098F                     	;# 
  1656  0990                     	;# 
  1657  0991                     	;# 
  1658  0992                     	;# 
  1659  0993                     	;# 
  1660  0994                     	;# 
  1661  0995                     	;# 
  1662  0996                     	;# 
  1663  0997                     	;# 
  1664  0A19                     	;# 
  1665  0A19                     	;# 
  1666  0A1A                     	;# 
  1667  0A1A                     	;# 
  1668  0A1B                     	;# 
  1669  0A1B                     	;# 
  1670  0A1B                     	;# 
  1671  0A1C                     	;# 
  1672  0A1C                     	;# 
  1673  0A1D                     	;# 
  1674  0A1D                     	;# 
  1675  0A1E                     	;# 
  1676  0A1E                     	;# 
  1677  0A1F                     	;# 
  1678  0A1F                     	;# 
  1679  0A1F                     	;# 
  1680  1E0F                     	;# 
  1681  1E10                     	;# 
  1682  1E11                     	;# 
  1683  1E12                     	;# 
  1684  1E13                     	;# 
  1685  1E14                     	;# 
  1686  1E15                     	;# 
  1687  1E16                     	;# 
  1688  1E17                     	;# 
  1689  1E18                     	;# 
  1690  1E19                     	;# 
  1691  1E1A                     	;# 
  1692  1E1B                     	;# 
  1693  1E1C                     	;# 
  1694  1E1D                     	;# 
  1695  1E1E                     	;# 
  1696  1E1F                     	;# 
  1697  1E20                     	;# 
  1698  1E21                     	;# 
  1699  1E22                     	;# 
  1700  1E23                     	;# 
  1701  1E24                     	;# 
  1702  1E25                     	;# 
  1703  1E26                     	;# 
  1704  1E27                     	;# 
  1705  1E28                     	;# 
  1706  1E29                     	;# 
  1707  1E2A                     	;# 
  1708  1E2B                     	;# 
  1709  1E2C                     	;# 
  1710  1E2D                     	;# 
  1711  1E2E                     	;# 
  1712  1E2F                     	;# 
  1713  1E30                     	;# 
  1714  1E31                     	;# 
  1715  1E32                     	;# 
  1716  1E33                     	;# 
  1717  1E34                     	;# 
  1718  1E35                     	;# 
  1719  1E36                     	;# 
  1720  1E37                     	;# 
  1721  1E8F                     	;# 
  1722  1E90                     	;# 
  1723  1E91                     	;# 
  1724  1E92                     	;# 
  1725  1E93                     	;# 
  1726  1E9C                     	;# 
  1727  1EA1                     	;# 
  1728  1EA2                     	;# 
  1729  1EB1                     	;# 
  1730  1EBB                     	;# 
  1731  1EBC                     	;# 
  1732  1EBD                     	;# 
  1733  1EBE                     	;# 
  1734  1EC3                     	;# 
  1735  1EC5                     	;# 
  1736  1EC6                     	;# 
  1737  1EC7                     	;# 
  1738  1EC8                     	;# 
  1739  1EC9                     	;# 
  1740  1ECA                     	;# 
  1741  1ECB                     	;# 
  1742  1ECC                     	;# 
  1743  1ECD                     	;# 
  1744  1ECE                     	;# 
  1745  1F10                     	;# 
  1746  1F11                     	;# 
  1747  1F12                     	;# 
  1748  1F13                     	;# 
  1749  1F14                     	;# 
  1750  1F15                     	;# 
  1751  1F16                     	;# 
  1752  1F17                     	;# 
  1753  1F18                     	;# 
  1754  1F19                     	;# 
  1755  1F1A                     	;# 
  1756  1F1B                     	;# 
  1757  1F1C                     	;# 
  1758  1F1D                     	;# 
  1759  1F1E                     	;# 
  1760  1F1F                     	;# 
  1761  1F20                     	;# 
  1762  1F21                     	;# 
  1763  1F22                     	;# 
  1764  1F23                     	;# 
  1765  1F24                     	;# 
  1766  1F25                     	;# 
  1767  1F26                     	;# 
  1768  1F27                     	;# 
  1769  1F38                     	;# 
  1770  1F39                     	;# 
  1771  1F3A                     	;# 
  1772  1F3B                     	;# 
  1773  1F3C                     	;# 
  1774  1F3D                     	;# 
  1775  1F3E                     	;# 
  1776  1F3F                     	;# 
  1777  1F43                     	;# 
  1778  1F44                     	;# 
  1779  1F45                     	;# 
  1780  1F46                     	;# 
  1781  1F47                     	;# 
  1782  1F48                     	;# 
  1783  1F49                     	;# 
  1784  1F4A                     	;# 
  1785  1F4E                     	;# 
  1786  1F4F                     	;# 
  1787  1F50                     	;# 
  1788  1F51                     	;# 
  1789  1F52                     	;# 
  1790  1F53                     	;# 
  1791  1F54                     	;# 
  1792  1F55                     	;# 
  1793  1F65                     	;# 
  1794  1F68                     	;# 
  1795  1F69                     	;# 
  1796  1F6A                     	;# 
  1797  1F6B                     	;# 
  1798  1FE4                     	;# 
  1799  1FE5                     	;# 
  1800  1FE6                     	;# 
  1801  1FE7                     	;# 
  1802  1FE8                     	;# 
  1803  1FE8                     	;# 
  1804  1FE9                     	;# 
  1805  1FEA                     	;# 
  1806  1FEA                     	;# 
  1807  1FEB                     	;# 
  1808  1FED                     	;# 
  1809  1FEE                     	;# 
  1810  1FEF                     	;# 
  1811  0000                     	;# 
  1812  0001                     	;# 
  1813  0002                     	;# 
  1814  0003                     	;# 
  1815  0004                     	;# 
  1816  0005                     	;# 
  1817  0006                     	;# 
  1818  0007                     	;# 
  1819  0008                     	;# 
  1820  0009                     	;# 
  1821  000A                     	;# 
  1822  000B                     	;# 
  1823  000C                     	;# 
  1824  000D                     	;# 
  1825  000E                     	;# 
  1826  0010                     	;# 
  1827  0012                     	;# 
  1828  0013                     	;# 
  1829  0014                     	;# 
  1830  0016                     	;# 
  1831  0018                     	;# 
  1832  0019                     	;# 
  1833  001A                     	;# 
  1834  009B                     	;# 
  1835  009B                     	;# 
  1836  009C                     	;# 
  1837  009D                     	;# 
  1838  009E                     	;# 
  1839  009F                     	;# 
  1840  0119                     	;# 
  1841  0119                     	;# 
  1842  0119                     	;# 
  1843  011A                     	;# 
  1844  011A                     	;# 
  1845  011A                     	;# 
  1846  011B                     	;# 
  1847  011B                     	;# 
  1848  011B                     	;# 
  1849  011B                     	;# 
  1850  011B                     	;# 
  1851  011C                     	;# 
  1852  011C                     	;# 
  1853  011C                     	;# 
  1854  011D                     	;# 
  1855  011D                     	;# 
  1856  011D                     	;# 
  1857  011E                     	;# 
  1858  011E                     	;# 
  1859  011E                     	;# 
  1860  011F                     	;# 
  1861  011F                     	;# 
  1862  011F                     	;# 
  1863  011F                     	;# 
  1864  011F                     	;# 
  1865  018C                     	;# 
  1866  018D                     	;# 
  1867  018E                     	;# 
  1868  018F                     	;# 
  1869  0190                     	;# 
  1870  0191                     	;# 
  1871  0192                     	;# 
  1872  0196                     	;# 
  1873  0197                     	;# 
  1874  0198                     	;# 
  1875  0199                     	;# 
  1876  019A                     	;# 
  1877  019B                     	;# 
  1878  019C                     	;# 
  1879  020C                     	;# 
  1880  020C                     	;# 
  1881  020D                     	;# 
  1882  020E                     	;# 
  1883  020F                     	;# 
  1884  020F                     	;# 
  1885  0210                     	;# 
  1886  0210                     	;# 
  1887  0211                     	;# 
  1888  0211                     	;# 
  1889  028C                     	;# 
  1890  028C                     	;# 
  1891  028D                     	;# 
  1892  028D                     	;# 
  1893  028E                     	;# 
  1894  028F                     	;# 
  1895  0290                     	;# 
  1896  0291                     	;# 
  1897  030C                     	;# 
  1898  030C                     	;# 
  1899  030D                     	;# 
  1900  030E                     	;# 
  1901  030F                     	;# 
  1902  0310                     	;# 
  1903  0310                     	;# 
  1904  0311                     	;# 
  1905  0312                     	;# 
  1906  0313                     	;# 
  1907  0314                     	;# 
  1908  0314                     	;# 
  1909  0315                     	;# 
  1910  0316                     	;# 
  1911  0318                     	;# 
  1912  0318                     	;# 
  1913  0319                     	;# 
  1914  031A                     	;# 
  1915  031C                     	;# 
  1916  031C                     	;# 
  1917  031D                     	;# 
  1918  031E                     	;# 
  1919  038C                     	;# 
  1920  038C                     	;# 
  1921  038D                     	;# 
  1922  038E                     	;# 
  1923  058C                     	;# 
  1924  058C                     	;# 
  1925  058D                     	;# 
  1926  058E                     	;# 
  1927  058F                     	;# 
  1928  058F                     	;# 
  1929  0590                     	;# 
  1930  0591                     	;# 
  1931  0592                     	;# 
  1932  0593                     	;# 
  1933  059C                     	;# 
  1934  059C                     	;# 
  1935  059D                     	;# 
  1936  059D                     	;# 
  1937  059E                     	;# 
  1938  059F                     	;# 
  1939  060C                     	;# 
  1940  060D                     	;# 
  1941  060E                     	;# 
  1942  060F                     	;# 
  1943  0610                     	;# 
  1944  0611                     	;# 
  1945  0612                     	;# 
  1946  0613                     	;# 
  1947  0614                     	;# 
  1948  070C                     	;# 
  1949  070D                     	;# 
  1950  070E                     	;# 
  1951  070F                     	;# 
  1952  0710                     	;# 
  1953  0711                     	;# 
  1954  0712                     	;# 
  1955  0713                     	;# 
  1956  0716                     	;# 
  1957  0717                     	;# 
  1958  0718                     	;# 
  1959  0719                     	;# 
  1960  071A                     	;# 
  1961  071B                     	;# 
  1962  071C                     	;# 
  1963  071D                     	;# 
  1964  0796                     	;# 
  1965  0797                     	;# 
  1966  0798                     	;# 
  1967  0799                     	;# 
  1968  079A                     	;# 
  1969  079B                     	;# 
  1970  080C                     	;# 
  1971  080D                     	;# 
  1972  080E                     	;# 
  1973  080F                     	;# 
  1974  0810                     	;# 
  1975  0811                     	;# 
  1976  0812                     	;# 
  1977  0813                     	;# 
  1978  0814                     	;# 
  1979  081A                     	;# 
  1980  081A                     	;# 
  1981  081B                     	;# 
  1982  081C                     	;# 
  1983  081C                     	;# 
  1984  081D                     	;# 
  1985  081E                     	;# 
  1986  081F                     	;# 
  1987  088C                     	;# 
  1988  088D                     	;# 
  1989  088E                     	;# 
  1990  088F                     	;# 
  1991  0890                     	;# 
  1992  0891                     	;# 
  1993  0892                     	;# 
  1994  0893                     	;# 
  1995  0895                     	;# 
  1996  0896                     	;# 
  1997  090C                     	;# 
  1998  090E                     	;# 
  1999  090F                     	;# 
  2000  091F                     	;# 
  2001  098F                     	;# 
  2002  098F                     	;# 
  2003  0990                     	;# 
  2004  0991                     	;# 
  2005  0992                     	;# 
  2006  0993                     	;# 
  2007  0994                     	;# 
  2008  0995                     	;# 
  2009  0996                     	;# 
  2010  0997                     	;# 
  2011  0A19                     	;# 
  2012  0A19                     	;# 
  2013  0A1A                     	;# 
  2014  0A1A                     	;# 
  2015  0A1B                     	;# 
  2016  0A1B                     	;# 
  2017  0A1B                     	;# 
  2018  0A1C                     	;# 
  2019  0A1C                     	;# 
  2020  0A1D                     	;# 
  2021  0A1D                     	;# 
  2022  0A1E                     	;# 
  2023  0A1E                     	;# 
  2024  0A1F                     	;# 
  2025  0A1F                     	;# 
  2026  0A1F                     	;# 
  2027  1E0F                     	;# 
  2028  1E10                     	;# 
  2029  1E11                     	;# 
  2030  1E12                     	;# 
  2031  1E13                     	;# 
  2032  1E14                     	;# 
  2033  1E15                     	;# 
  2034  1E16                     	;# 
  2035  1E17                     	;# 
  2036  1E18                     	;# 
  2037  1E19                     	;# 
  2038  1E1A                     	;# 
  2039  1E1B                     	;# 
  2040  1E1C                     	;# 
  2041  1E1D                     	;# 
  2042  1E1E                     	;# 
  2043  1E1F                     	;# 
  2044  1E20                     	;# 
  2045  1E21                     	;# 
  2046  1E22                     	;# 
  2047  1E23                     	;# 
  2048  1E24                     	;# 
  2049  1E25                     	;# 
  2050  1E26                     	;# 
  2051  1E27                     	;# 
  2052  1E28                     	;# 
  2053  1E29                     	;# 
  2054  1E2A                     	;# 
  2055  1E2B                     	;# 
  2056  1E2C                     	;# 
  2057  1E2D                     	;# 
  2058  1E2E                     	;# 
  2059  1E2F                     	;# 
  2060  1E30                     	;# 
  2061  1E31                     	;# 
  2062  1E32                     	;# 
  2063  1E33                     	;# 
  2064  1E34                     	;# 
  2065  1E35                     	;# 
  2066  1E36                     	;# 
  2067  1E37                     	;# 
  2068  1E8F                     	;# 
  2069  1E90                     	;# 
  2070  1E91                     	;# 
  2071  1E92                     	;# 
  2072  1E93                     	;# 
  2073  1E9C                     	;# 
  2074  1EA1                     	;# 
  2075  1EA2                     	;# 
  2076  1EB1                     	;# 
  2077  1EBB                     	;# 
  2078  1EBC                     	;# 
  2079  1EBD                     	;# 
  2080  1EBE                     	;# 
  2081  1EC3                     	;# 
  2082  1EC5                     	;# 
  2083  1EC6                     	;# 
  2084  1EC7                     	;# 
  2085  1EC8                     	;# 
  2086  1EC9                     	;# 
  2087  1ECA                     	;# 
  2088  1ECB                     	;# 
  2089  1ECC                     	;# 
  2090  1ECD                     	;# 
  2091  1ECE                     	;# 
  2092  1F10                     	;# 
  2093  1F11                     	;# 
  2094  1F12                     	;# 
  2095  1F13                     	;# 
  2096  1F14                     	;# 
  2097  1F15                     	;# 
  2098  1F16                     	;# 
  2099  1F17                     	;# 
  2100  1F18                     	;# 
  2101  1F19                     	;# 
  2102  1F1A                     	;# 
  2103  1F1B                     	;# 
  2104  1F1C                     	;# 
  2105  1F1D                     	;# 
  2106  1F1E                     	;# 
  2107  1F1F                     	;# 
  2108  1F20                     	;# 
  2109  1F21                     	;# 
  2110  1F22                     	;# 
  2111  1F23                     	;# 
  2112  1F24                     	;# 
  2113  1F25                     	;# 
  2114  1F26                     	;# 
  2115  1F27                     	;# 
  2116  1F38                     	;# 
  2117  1F39                     	;# 
  2118  1F3A                     	;# 
  2119  1F3B                     	;# 
  2120  1F3C                     	;# 
  2121  1F3D                     	;# 
  2122  1F3E                     	;# 
  2123  1F3F                     	;# 
  2124  1F43                     	;# 
  2125  1F44                     	;# 
  2126  1F45                     	;# 
  2127  1F46                     	;# 
  2128  1F47                     	;# 
  2129  1F48                     	;# 
  2130  1F49                     	;# 
  2131  1F4A                     	;# 
  2132  1F4E                     	;# 
  2133  1F4F                     	;# 
  2134  1F50                     	;# 
  2135  1F51                     	;# 
  2136  1F52                     	;# 
  2137  1F53                     	;# 
  2138  1F54                     	;# 
  2139  1F55                     	;# 
  2140  1F65                     	;# 
  2141  1F68                     	;# 
  2142  1F69                     	;# 
  2143  1F6A                     	;# 
  2144  1F6B                     	;# 
  2145  1FE4                     	;# 
  2146  1FE5                     	;# 
  2147  1FE6                     	;# 
  2148  1FE7                     	;# 
  2149  1FE8                     	;# 
  2150  1FE8                     	;# 
  2151  1FE9                     	;# 
  2152  1FEA                     	;# 
  2153  1FEA                     	;# 
  2154  1FEB                     	;# 
  2155  1FED                     	;# 
  2156  1FEE                     	;# 
  2157  1FEF                     	;# 
  2158                           
  2159                           	psect	idataCOMMON
  2160  0296                     __pidataCOMMON:
  2161                           
  2162                           ;initializer for _synchron
  2163  0296  3401               	retlw	1
  2164                           
  2165                           	psect	nvBANK0
  2166  0040                     __pnvBANK0:
  2167  0040                     _TMR0_InterruptHandler:
  2168  0040                     	ds	2
  2169  000B                     _INTCONbits	set	11
  2170  000C                     _PORTA	set	12
  2171  000E                     _PORTC	set	14
  2172  0014                     _TRISC	set	20
  2173  0013                     _TRISB	set	19
  2174  0012                     _TRISA	set	18
  2175  001A                     _LATC	set	26
  2176  0019                     _LATB	set	25
  2177  0018                     _LATA	set	24
  2178  059E                     _T0CON0bits	set	1438
  2179  059E                     _T0CON0	set	1438
  2180  059C                     _TMR0L	set	1436
  2181  059D                     _TMR0H	set	1437
  2182  059F                     _T0CON1	set	1439
  2183  070C                     _PIR0bits	set	1804
  2184  0716                     _PIE0bits	set	1814
  2185  079B                     _PMD5	set	1947
  2186  079A                     _PMD4	set	1946
  2187  0799                     _PMD3	set	1945
  2188  0798                     _PMD2	set	1944
  2189  0797                     _PMD1	set	1943
  2190  0796                     _PMD0	set	1942
  2191  0892                     _OSCTUNE	set	2194
  2192  0890                     _OSCSTAT	set	2192
  2193  0893                     _OSCFRQ	set	2195
  2194  0891                     _OSCEN	set	2193
  2195  088F                     _OSCCON3	set	2191
  2196  088D                     _OSCCON1	set	2189
  2197  1F68                     _INLVLE	set	8040
  2198  1F52                     _INLVLC	set	8018
  2199  1F47                     _INLVLB	set	8007
  2200  1F3C                     _INLVLA	set	7996
  2201  1F51                     _SLRCONC	set	8017
  2202  1F46                     _SLRCONB	set	8006
  2203  1F3B                     _SLRCONA	set	7995
  2204  1F50                     _ODCONC	set	8016
  2205  1F45                     _ODCONB	set	8005
  2206  1F3A                     _ODCONA	set	7994
  2207  1F4F                     _WPUC	set	8015
  2208  1F39                     _WPUA	set	7993
  2209  1F44                     _WPUB	set	8004
  2210  1F65                     _WPUE	set	8037
  2211  1F38                     _ANSELA	set	7992
  2212  1F43                     _ANSELB	set	8003
  2213  1F4E                     _ANSELC	set	8014
  2214                           
  2215                           	psect	cinit
  2216  0016                     start_initialization:	
  2217                           ; #config settings
  2218                           
  2219  0016                     __initialization:
  2220                           
  2221                           ; Initialize objects allocated to COMMON
  2222  0016  3182  2296  3180   	fcall	__pidataCOMMON	;fetch initializer
  2223  0019  00FB               	movwf	__pdataCOMMON& (0+127)
  2224                           
  2225                           ; Clear objects allocated to COMMON
  2226  001A  01F9               	clrf	__pbssCOMMON& (0+127)
  2227  001B  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  2228                           
  2229                           ; Clear objects allocated to BANK0
  2230  001C  3020               	movlw	low __pbssBANK0
  2231  001D  0084               	movwf	4
  2232  001E  3000               	movlw	high __pbssBANK0
  2233  001F  0085               	movwf	5
  2234  0020  301A               	movlw	26
  2235  0021  3182  2281  3180   	fcall	clear_ram0
  2236  0024                     end_of_initialization:	
  2237                           ;End of C runtime variable initialization code
  2238                           
  2239  0024                     __end_of__initialization:
  2240  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2241  0025  0140               	movlb	0
  2242  0026  3182  2A13         	ljmp	_main	;jump to C main() function
  2243                           
  2244                           	psect	bssCOMMON
  2245  0079                     __pbssCOMMON:
  2246  0079                     _blocked:
  2247  0079                     	ds	1
  2248  007A                     _copyInput:
  2249  007A                     	ds	1
  2250                           
  2251                           	psect	dataCOMMON
  2252  007B                     __pdataCOMMON:
  2253  007B                     _synchron:
  2254  007B                     	ds	1
  2255                           
  2256                           	psect	bssBANK0
  2257  0020                     __pbssBANK0:
  2258  0020                     get_Zyklus2@kopie:
  2259  0020                     	ds	2
  2260  0022                     get_Zyklus1@kopie:
  2261  0022                     	ds	2
  2262  0024                     get_Zyklus@kopie:
  2263  0024                     	ds	2
  2264  0026                     _zyklen2:
  2265  0026                     	ds	2
  2266  0028                     _zyklen1:
  2267  0028                     	ds	2
  2268  002A                     _zyklen:
  2269  002A                     	ds	2
  2270  002C                     readInput@oldInput:
  2271  002C                     	ds	1
  2272  002D                     _falseCounter:
  2273  002D                     	ds	1
  2274  002E                     _newCode:
  2275  002E                     	ds	1
  2276  002F                     _currentCode:
  2277  002F                     	ds	1
  2278  0030                     _state:
  2279  0030                     	ds	1
  2280  0031                     _ledOpened:
  2281  0031                     	ds	1
  2282  0032                     _ledAlarm:
  2283  0032                     	ds	1
  2284  0033                     _ledProgramming:
  2285  0033                     	ds	1
  2286  0034                     _switchCodeInput:
  2287  0034                     	ds	1
  2288  0035                     _switchReadCodePosEdge:
  2289  0035                     	ds	1
  2290  0036                     _switchReadCodeNegEdge:
  2291  0036                     	ds	1
  2292  0037                     _switchProgrammingCodePosEdge:
  2293  0037                     	ds	1
  2294  0038                     _switchProgrammingCodeNegEdge:
  2295  0038                     	ds	1
  2296  0039                     _copyOutput:
  2297  0039                     	ds	1
  2298                           
  2299                           	psect	clrtext
  2300  0281                     clear_ram0:	
  2301                           ;	Called with FSR0 containing the base address, and
  2302                           ;	WREG with the size to clear
  2303                           
  2304  0281  0064               	clrwdt	;clear the watchdog before getting into this loop
  2305  0282                     clrloop0:
  2306  0282  0180               	clrf	0	;clear RAM location pointed to by FSR
  2307  0283  3101               	addfsr 0,1
  2308  0284  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2309  0285  2A82               	goto	clrloop0	;have we reached the end yet?
  2310  0286  3400               	retlw	0	;all done for this memory range, return
  2311                           
  2312                           	psect	cstackCOMMON
  2313  0070                     __pcstackCOMMON:
  2314  0070                     ?_TMR0_ISR:
  2315  0070                     ?_PMD_Initialize:	
  2316                           ; 1 bytes @ 0x0
  2317                           
  2318  0070                     ?_PIN_MANAGER_Initialize:	
  2319                           ; 1 bytes @ 0x0
  2320                           
  2321  0070                     ?_OSCILLATOR_Initialize:	
  2322                           ; 1 bytes @ 0x0
  2323                           
  2324  0070                     ?_TMR0_Initialize:	
  2325                           ; 1 bytes @ 0x0
  2326                           
  2327  0070                     ?_TMR0_DefaultInterruptHandler:	
  2328                           ; 1 bytes @ 0x0
  2329                           
  2330  0070                     ??_TMR0_DefaultInterruptHandler:	
  2331                           ; 1 bytes @ 0x0
  2332                           
  2333  0070                     ?_ZYKLUS_Initialize:	
  2334                           ; 1 bytes @ 0x0
  2335                           
  2336  0070                     ?_reset_Zyklus:	
  2337                           ; 1 bytes @ 0x0
  2338                           
  2339  0070                     ?_reset_Zyklus1:	
  2340                           ; 1 bytes @ 0x0
  2341                           
  2342  0070                     ?_reset_Zyklus2:	
  2343                           ; 1 bytes @ 0x0
  2344                           
  2345  0070                     ?_readInput:	
  2346                           ; 1 bytes @ 0x0
  2347                           
  2348  0070                     ?_process:	
  2349                           ; 1 bytes @ 0x0
  2350                           
  2351  0070                     ?_writeOutput:	
  2352                           ; 1 bytes @ 0x0
  2353                           
  2354  0070                     ?_My_InterruptHandler:	
  2355                           ; 1 bytes @ 0x0
  2356                           
  2357  0070                     ??_My_InterruptHandler:	
  2358                           ; 1 bytes @ 0x0
  2359                           
  2360  0070                     ?_INTERRUPT_InterruptManager:	
  2361                           ; 1 bytes @ 0x0
  2362                           
  2363  0070                     ?_SYSTEM_Initialize:	
  2364                           ; 1 bytes @ 0x0
  2365                           
  2366  0070                     ?_TMR0_StartTimer:	
  2367                           ; 1 bytes @ 0x0
  2368                           
  2369  0070                     ?_initializing:	
  2370                           ; 1 bytes @ 0x0
  2371                           
  2372  0070                     ?_main:	
  2373                           ; 1 bytes @ 0x0
  2374                           
  2375  0070                     ?_sync:	
  2376                           ; 1 bytes @ 0x0
  2377                           
  2378  0070                     ?_get_Zyklus1:	
  2379                           ; 1 bytes @ 0x0
  2380                           
  2381  0070                     ?_get_Zyklus2:	
  2382                           ; 2 bytes @ 0x0
  2383                           
  2384                           
  2385                           ; 2 bytes @ 0x0
  2386  0070                     	ds	2
  2387  0072                     ??_TMR0_ISR:
  2388  0072                     ??_PMD_Initialize:	
  2389                           ; 1 bytes @ 0x2
  2390                           
  2391  0072                     ??_PIN_MANAGER_Initialize:	
  2392                           ; 1 bytes @ 0x2
  2393                           
  2394  0072                     ??_OSCILLATOR_Initialize:	
  2395                           ; 1 bytes @ 0x2
  2396                           
  2397  0072                     ?_TMR0_SetInterruptHandler:	
  2398                           ; 1 bytes @ 0x2
  2399                           
  2400  0072                     ??_get_Zyklus1:	
  2401                           ; 1 bytes @ 0x2
  2402                           
  2403  0072                     ??_get_Zyklus2:	
  2404                           ; 1 bytes @ 0x2
  2405                           
  2406  0072                     ??_reset_Zyklus:	
  2407                           ; 1 bytes @ 0x2
  2408                           
  2409  0072                     ??_reset_Zyklus1:	
  2410                           ; 1 bytes @ 0x2
  2411                           
  2412  0072                     ??_reset_Zyklus2:	
  2413                           ; 1 bytes @ 0x2
  2414                           
  2415  0072                     ??_readInput:	
  2416                           ; 1 bytes @ 0x2
  2417                           
  2418  0072                     ??_writeOutput:	
  2419                           ; 1 bytes @ 0x2
  2420                           
  2421  0072                     ??_INTERRUPT_InterruptManager:	
  2422                           ; 1 bytes @ 0x2
  2423                           
  2424  0072                     ??_TMR0_StartTimer:	
  2425                           ; 1 bytes @ 0x2
  2426                           
  2427  0072                     ??_sync:	
  2428                           ; 1 bytes @ 0x2
  2429                           
  2430  0072                     ?_get_Zyklus:	
  2431                           ; 1 bytes @ 0x2
  2432                           
  2433  0072                     TMR0_SetInterruptHandler@InterruptHandler:	
  2434                           ; 2 bytes @ 0x2
  2435                           
  2436                           
  2437                           ; 2 bytes @ 0x2
  2438  0072                     	ds	2
  2439  0074                     ??_TMR0_Initialize:
  2440  0074                     ??_TMR0_SetInterruptHandler:	
  2441                           ; 1 bytes @ 0x4
  2442                           
  2443  0074                     ??_ZYKLUS_Initialize:	
  2444                           ; 1 bytes @ 0x4
  2445                           
  2446  0074                     ??_get_Zyklus:	
  2447                           ; 1 bytes @ 0x4
  2448                           
  2449  0074                     ??_SYSTEM_Initialize:	
  2450                           ; 1 bytes @ 0x4
  2451                           
  2452  0074                     readInput@posEdge:	
  2453                           ; 1 bytes @ 0x4
  2454                           
  2455                           
  2456                           ; 1 bytes @ 0x4
  2457  0074                     	ds	1
  2458  0075                     ?_blink1:
  2459  0075                     readInput@negEdge:	
  2460                           ; 1 bytes @ 0x5
  2461                           
  2462  0075                     blink1@tOn:	
  2463                           ; 1 bytes @ 0x5
  2464                           
  2465                           
  2466                           ; 2 bytes @ 0x5
  2467  0075                     	ds	2
  2468  0077                     blink1@tOff:
  2469                           
  2470                           ; 2 bytes @ 0x7
  2471  0077                     	ds	2
  2472  0079                     ??_initializing:
  2473  0079                     ??_main:	
  2474                           ; 1 bytes @ 0x9
  2475                           
  2476                           
  2477                           	psect	cstackBANK0
  2478  003A                     __pcstackBANK0:	
  2479                           ; 1 bytes @ 0x9
  2480                           
  2481  003A                     ??_blink1:
  2482                           
  2483                           ; 1 bytes @ 0x0
  2484  003A                     	ds	2
  2485  003C                     blink1@status:
  2486                           
  2487                           ; 2 bytes @ 0x2
  2488  003C                     	ds	2
  2489  003E                     ??_process:
  2490                           
  2491                           ; 1 bytes @ 0x4
  2492  003E                     	ds	2
  2493                           
  2494                           	psect	maintext
  2495  0213                     __pmaintext:	
  2496 ;;
  2497 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2498 ;;
  2499 ;; *************** function _main *****************
  2500 ;; Defined at:
  2501 ;;		line 105 in file "main.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;		None
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;		None
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  1    wreg      void 
  2508 ;; Registers used:
  2509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : B3F/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2519 ;;Total ram usage:        0 bytes
  2520 ;; Hardware stack levels required when called:    7
  2521 ;; This function calls:
  2522 ;;		_initializing
  2523 ;;		_process
  2524 ;;		_readInput
  2525 ;;		_writeOutput
  2526 ;; This function is called by:
  2527 ;;		Startup code after reset
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           
  2532                           ;psect for function _main
  2533  0213                     _main:
  2534  0213                     l1491:	
  2535                           ;incstack = 0
  2536                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2537                           
  2538                           
  2539                           ;main.c: 107:     initializing();
  2540  0213  3181  215D  3182   	fcall	_initializing
  2541  0216                     l218:	
  2542                           ;main.c: 108:     while(1)
  2543                           
  2544                           
  2545                           ;main.c: 109:     {;main.c: 110:     readInput();
  2546  0216  3180  20A4  3182   	fcall	_readInput
  2547  0219                     l1493:
  2548                           
  2549                           ;main.c: 111:     process();
  2550  0219  3180  2028  3182   	fcall	_process
  2551  021C                     l1495:
  2552                           
  2553                           ;main.c: 112:     writeOutput();
  2554  021C  3181  21A8  3182   	fcall	_writeOutput
  2555  021F  2A16               	goto	l218
  2556  0220  3180  2814         	ljmp	start
  2557  0222                     __end_of_main:
  2558                           
  2559                           	psect	text1
  2560  01A8                     __ptext1:	
  2561 ;; *************** function _writeOutput *****************
  2562 ;; Defined at:
  2563 ;;		line 223 in file "main.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		wreg, status,2, status,0
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2579 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2580 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2581 ;;Total ram usage:        2 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:    3
  2584 ;; This function calls:
  2585 ;;		Nothing
  2586 ;; This function is called by:
  2587 ;;		_main
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           
  2592                           ;psect for function _writeOutput
  2593  01A8                     _writeOutput:
  2594  01A8                     l1383:	
  2595                           ;incstack = 0
  2596                           ; Regs used in _writeOutput: [wreg+status,2+status,0]
  2597                           
  2598                           
  2599                           ;main.c: 228:     copyOutput = ledOpened;
  2600  01A8  0140               	movlb	0	; select bank0
  2601  01A9  0831               	movf	_ledOpened,w
  2602  01AA  00F2               	movwf	??_writeOutput
  2603  01AB  0872               	movf	??_writeOutput,w
  2604  01AC  00B9               	movwf	_copyOutput
  2605  01AD                     l1385:
  2606                           
  2607                           ;main.c: 229:     copyOutput |= (ledAlarm <<1) & 0x02;
  2608  01AD  3532               	lslf	_ledAlarm,w
  2609  01AE  3902               	andlw	2
  2610  01AF  00F2               	movwf	??_writeOutput
  2611  01B0  0872               	movf	??_writeOutput,w
  2612  01B1  04B9               	iorwf	_copyOutput,f
  2613  01B2                     l1387:
  2614                           
  2615                           ;main.c: 230:     copyOutput |= (ledProgramming <<7) & 0x80;
  2616  01B2  0833               	movf	_ledProgramming,w
  2617  01B3  00F2               	movwf	??_writeOutput
  2618  01B4  3006               	movlw	6
  2619  01B5                     u465:
  2620  01B5  35F2               	lslf	??_writeOutput,f
  2621  01B6  3EFF               	addlw	-1
  2622  01B7  1D03               	skipz
  2623  01B8  29B5               	goto	u465
  2624  01B9  3572               	lslf	??_writeOutput,w
  2625  01BA  3980               	andlw	128
  2626  01BB  00F3               	movwf	??_writeOutput+1
  2627  01BC  0873               	movf	??_writeOutput+1,w
  2628  01BD  04B9               	iorwf	_copyOutput,f
  2629                           
  2630                           ;main.c: 232:     PORTA = copyOutput;
  2631  01BE  0839               	movf	_copyOutput,w
  2632  01BF  008C               	movwf	12	;volatile
  2633  01C0                     l248:
  2634  01C0  0008               	return
  2635  01C1                     __end_of_writeOutput:
  2636                           
  2637                           	psect	text2
  2638  00A4                     __ptext2:	
  2639 ;; *************** function _readInput *****************
  2640 ;; Defined at:
  2641 ;;		line 121 in file "main.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;		None
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;  negEdge         1    5[COMMON] unsigned char 
  2646 ;;  posEdge         1    4[COMMON] unsigned char 
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  1    wreg      void 
  2649 ;; Registers used:
  2650 ;;		wreg, status,2, status,0
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2657 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2658 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2659 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2660 ;;Total ram usage:        4 bytes
  2661 ;; Hardware stack levels used:    1
  2662 ;; Hardware stack levels required when called:    3
  2663 ;; This function calls:
  2664 ;;		Nothing
  2665 ;; This function is called by:
  2666 ;;		_main
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           
  2671                           ;psect for function _readInput
  2672  00A4                     _readInput:
  2673  00A4                     l1317:	
  2674                           ;incstack = 0
  2675                           ; Regs used in _readInput: [wreg+status,2+status,0]
  2676                           
  2677                           
  2678                           ;main.c: 125:     unsigned char negEdge = 0;
  2679  00A4  01F5               	clrf	readInput@negEdge
  2680  00A5                     l1319:
  2681                           
  2682                           ;main.c: 127:     copyInput = PORTC;
  2683  00A5  0140               	movlb	0	; select bank0
  2684  00A6  080E               	movf	14,w	;volatile
  2685  00A7  00F2               	movwf	??_readInput
  2686  00A8  0872               	movf	??_readInput,w
  2687  00A9  00FA               	movwf	_copyInput
  2688  00AA                     l1321:
  2689                           
  2690                           ;main.c: 130:     posEdge = (~oldInput) & copyInput;
  2691  00AA  092C               	comf	readInput@oldInput,w
  2692  00AB  057A               	andwf	_copyInput,w
  2693  00AC  00F2               	movwf	??_readInput
  2694  00AD  0872               	movf	??_readInput,w
  2695  00AE  00F4               	movwf	readInput@posEdge
  2696  00AF                     l1323:
  2697                           
  2698                           ;main.c: 131:     switchReadCodePosEdge = (posEdge & 0x20) >>5;
  2699  00AF  0874               	movf	readInput@posEdge,w
  2700  00B0  00F2               	movwf	??_readInput
  2701  00B1  3005               	movlw	5
  2702  00B2                     u345:
  2703  00B2  36F2               	lsrf	??_readInput,f
  2704  00B3  0B89               	decfsz	9,f
  2705  00B4  28B2               	goto	u345
  2706  00B5  0872               	movf	??_readInput,w
  2707  00B6  3901               	andlw	1
  2708  00B7  00F3               	movwf	??_readInput+1
  2709  00B8  0873               	movf	??_readInput+1,w
  2710  00B9  00B5               	movwf	_switchReadCodePosEdge
  2711  00BA                     l1325:
  2712                           
  2713                           ;main.c: 132:     switchProgrammingCodePosEdge = (posEdge & 0x80) >>7;
  2714  00BA  0874               	movf	readInput@posEdge,w
  2715  00BB  00F2               	movwf	??_readInput
  2716  00BC  3007               	movlw	7
  2717  00BD                     u355:
  2718  00BD  36F2               	lsrf	??_readInput,f
  2719  00BE  0B89               	decfsz	9,f
  2720  00BF  28BD               	goto	u355
  2721  00C0  0872               	movf	??_readInput,w
  2722  00C1  3901               	andlw	1
  2723  00C2  00F3               	movwf	??_readInput+1
  2724  00C3  0873               	movf	??_readInput+1,w
  2725  00C4  00B7               	movwf	_switchProgrammingCodePosEdge
  2726  00C5                     l1327:
  2727                           
  2728                           ;main.c: 135:     negEdge = oldInput & (~copyInput);
  2729  00C5  097A               	comf	_copyInput,w
  2730  00C6  052C               	andwf	readInput@oldInput,w
  2731  00C7  00F2               	movwf	??_readInput
  2732  00C8  0872               	movf	??_readInput,w
  2733  00C9  00F5               	movwf	readInput@negEdge
  2734  00CA                     l1329:
  2735                           
  2736                           ;main.c: 136:     switchReadCodeNegEdge = (negEdge & 0x20) >>5;
  2737  00CA  0875               	movf	readInput@negEdge,w
  2738  00CB  00F2               	movwf	??_readInput
  2739  00CC  3005               	movlw	5
  2740  00CD                     u365:
  2741  00CD  36F2               	lsrf	??_readInput,f
  2742  00CE  0B89               	decfsz	9,f
  2743  00CF  28CD               	goto	u365
  2744  00D0  0872               	movf	??_readInput,w
  2745  00D1  3901               	andlw	1
  2746  00D2  00F3               	movwf	??_readInput+1
  2747  00D3  0873               	movf	??_readInput+1,w
  2748  00D4  00B6               	movwf	_switchReadCodeNegEdge
  2749  00D5                     l1331:
  2750                           
  2751                           ;main.c: 137:     switchProgrammingCodeNegEdge = (negEdge & 0x80) >>7;
  2752  00D5  0875               	movf	readInput@negEdge,w
  2753  00D6  00F2               	movwf	??_readInput
  2754  00D7  3007               	movlw	7
  2755  00D8                     u375:
  2756  00D8  36F2               	lsrf	??_readInput,f
  2757  00D9  0B89               	decfsz	9,f
  2758  00DA  28D8               	goto	u375
  2759  00DB  0872               	movf	??_readInput,w
  2760  00DC  3901               	andlw	1
  2761  00DD  00F3               	movwf	??_readInput+1
  2762  00DE  0873               	movf	??_readInput+1,w
  2763  00DF  00B8               	movwf	_switchProgrammingCodeNegEdge
  2764  00E0                     l1333:
  2765                           
  2766                           ;main.c: 139:     oldInput = copyInput;
  2767  00E0  087A               	movf	_copyInput,w
  2768  00E1  00F2               	movwf	??_readInput
  2769  00E2  0872               	movf	??_readInput,w
  2770  00E3  00AC               	movwf	readInput@oldInput
  2771  00E4                     l1335:
  2772                           
  2773                           ;main.c: 141:     switchCodeInput = copyInput & 0b1111;
  2774  00E4  087A               	movf	_copyInput,w
  2775  00E5  390F               	andlw	15
  2776  00E6  00F2               	movwf	??_readInput
  2777  00E7  0872               	movf	??_readInput,w
  2778  00E8  00B4               	movwf	_switchCodeInput
  2779  00E9                     l226:
  2780  00E9  0008               	return
  2781  00EA                     __end_of_readInput:
  2782                           
  2783                           	psect	text3
  2784  0028                     __ptext3:	
  2785 ;; *************** function _process *****************
  2786 ;; Defined at:
  2787 ;;		line 150 in file "main.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;		None
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;		None
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2803 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2804 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2805 ;;Total ram usage:        2 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; Hardware stack levels required when called:    6
  2808 ;; This function calls:
  2809 ;;		_blink1
  2810 ;; This function is called by:
  2811 ;;		_main
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           
  2816                           ;psect for function _process
  2817  0028                     _process:
  2818  0028                     l1445:	
  2819                           ;incstack = 0
  2820                           ; Regs used in _process: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2821                           
  2822                           
  2823                           ;main.c: 153:     ledOpened = 0;
  2824  0028  0140               	movlb	0	; select bank0
  2825  0029  01B1               	clrf	_ledOpened
  2826                           
  2827                           ;main.c: 154:     ledProgramming = 0;
  2828  002A  01B3               	clrf	_ledProgramming
  2829                           
  2830                           ;main.c: 156:     switch(state)
  2831  002B  288D               	goto	l1485
  2832  002C                     l1447:
  2833                           
  2834                           ;main.c: 159:      if(switchReadCodePosEdge == 1)
  2835  002C  0335               	decf	_switchReadCodePosEdge,w
  2836  002D  1D03               	btfss	3,2
  2837  002E  2830               	goto	u521
  2838  002F  2831               	goto	u520
  2839  0030                     u521:
  2840  0030  2841               	goto	l1457
  2841  0031                     u520:
  2842  0031                     l1449:
  2843                           
  2844                           ;main.c: 160:      {;main.c: 161:   if(switchCodeInput == currentCode)
  2845  0031  0834               	movf	_switchCodeInput,w
  2846  0032  062F               	xorwf	_currentCode,w
  2847  0033  1D03               	skipz
  2848  0034  2836               	goto	u531
  2849  0035  2837               	goto	u530
  2850  0036                     u531:
  2851  0036  283D               	goto	l1455
  2852  0037                     u530:
  2853  0037                     l1451:
  2854                           
  2855                           ;main.c: 162:   {;main.c: 163:       state = 2;
  2856  0037  3002               	movlw	2
  2857  0038  00BE               	movwf	??_process
  2858  0039  083E               	movf	??_process,w
  2859  003A  00B0               	movwf	_state
  2860  003B                     l1453:
  2861                           
  2862                           ;main.c: 164:       falseCounter = 0;
  2863  003B  01AD               	clrf	_falseCounter
  2864                           
  2865                           ;main.c: 165:   }
  2866  003C  2841               	goto	l1457
  2867  003D                     l1455:
  2868                           
  2869                           ;main.c: 167:   {;main.c: 168:       falseCounter++;
  2870  003D  3001               	movlw	1
  2871  003E  00BE               	movwf	??_process
  2872  003F  083E               	movf	??_process,w
  2873  0040  07AD               	addwf	_falseCounter,f
  2874  0041                     l1457:
  2875                           
  2876                           ;main.c: 172:      if(falseCounter >=3)
  2877  0041  3003               	movlw	3
  2878  0042  022D               	subwf	_falseCounter,w
  2879  0043  1C03               	skipc
  2880  0044  2846               	goto	u541
  2881  0045  2847               	goto	u540
  2882  0046                     u541:
  2883  0046  28A3               	goto	l245
  2884  0047                     u540:
  2885  0047                     l1459:
  2886                           
  2887                           ;main.c: 173:      {;main.c: 174:   state = 4;
  2888  0047  3004               	movlw	4
  2889  0048  00BE               	movwf	??_process
  2890  0049  083E               	movf	??_process,w
  2891  004A  00B0               	movwf	_state
  2892  004B  28A3               	goto	l245
  2893  004C                     l236:	
  2894                           ;main.c: 178:  case 2:
  2895                           
  2896                           
  2897                           ;main.c: 179:      ledOpened = 1;
  2898  004C  01B1               	clrf	_ledOpened
  2899  004D  0AB1               	incf	_ledOpened,f
  2900  004E                     l1461:
  2901                           
  2902                           ;main.c: 181:      if(switchReadCodeNegEdge == 1)
  2903  004E  0336               	decf	_switchReadCodeNegEdge,w
  2904  004F  1D03               	btfss	3,2
  2905  0050  2852               	goto	u551
  2906  0051  2853               	goto	u550
  2907  0052                     u551:
  2908  0052  2856               	goto	l1465
  2909  0053                     u550:
  2910  0053                     l1463:
  2911                           
  2912                           ;main.c: 182:      {;main.c: 183:   state = 1;
  2913  0053  01B0               	clrf	_state
  2914  0054  0AB0               	incf	_state,f
  2915                           
  2916                           ;main.c: 184:      }
  2917  0055  28A3               	goto	l245
  2918  0056                     l1465:
  2919  0056  0337               	decf	_switchProgrammingCodePosEdge,w
  2920  0057  1D03               	btfss	3,2
  2921  0058  285A               	goto	u561
  2922  0059  285B               	goto	u560
  2923  005A                     u561:
  2924  005A  28A3               	goto	l245
  2925  005B                     u560:
  2926  005B                     l1467:
  2927                           
  2928                           ;main.c: 186:      {;main.c: 187:   state = 3;
  2929  005B  3003               	movlw	3
  2930  005C  00BE               	movwf	??_process
  2931  005D  083E               	movf	??_process,w
  2932  005E  00B0               	movwf	_state
  2933  005F  28A3               	goto	l245
  2934  0060                     l240:	
  2935                           ;main.c: 191:  case 3:
  2936                           
  2937                           
  2938                           ;main.c: 192:      ledProgramming = 1;
  2939  0060  01B3               	clrf	_ledProgramming
  2940  0061  0AB3               	incf	_ledProgramming,f
  2941                           
  2942                           ;main.c: 193:      ledOpened = 1;
  2943  0062  01B1               	clrf	_ledOpened
  2944  0063  0AB1               	incf	_ledOpened,f
  2945  0064                     l1469:
  2946                           
  2947                           ;main.c: 195:      if(switchReadCodePosEdge == 1)
  2948  0064  0335               	decf	_switchReadCodePosEdge,w
  2949  0065  1D03               	btfss	3,2
  2950  0066  2868               	goto	u571
  2951  0067  2869               	goto	u570
  2952  0068                     u571:
  2953  0068  286D               	goto	l1473
  2954  0069                     u570:
  2955  0069                     l1471:
  2956                           
  2957                           ;main.c: 196:      {;main.c: 197:   newCode = switchCodeInput;
  2958  0069  0834               	movf	_switchCodeInput,w
  2959  006A  00BE               	movwf	??_process
  2960  006B  083E               	movf	??_process,w
  2961  006C  00AE               	movwf	_newCode
  2962  006D                     l1473:
  2963                           
  2964                           ;main.c: 200:      if(switchProgrammingCodeNegEdge == 1 && newCode != currentCode)
  2965  006D  0338               	decf	_switchProgrammingCodeNegEdge,w
  2966  006E  1D03               	btfss	3,2
  2967  006F  2871               	goto	u581
  2968  0070  2872               	goto	u580
  2969  0071                     u581:
  2970  0071  28A3               	goto	l245
  2971  0072                     u580:
  2972  0072                     l1475:
  2973  0072  082E               	movf	_newCode,w
  2974  0073  062F               	xorwf	_currentCode,w
  2975  0074  1903               	skipnz
  2976  0075  2877               	goto	u591
  2977  0076  2878               	goto	u590
  2978  0077                     u591:
  2979  0077  28A3               	goto	l245
  2980  0078                     u590:
  2981  0078                     l1477:
  2982                           
  2983                           ;main.c: 201:      {;main.c: 202:   currentCode = newCode;
  2984  0078  082E               	movf	_newCode,w
  2985  0079  00BE               	movwf	??_process
  2986  007A  083E               	movf	??_process,w
  2987  007B  00AF               	movwf	_currentCode
  2988  007C  2853               	goto	l1463
  2989  007D                     l1481:
  2990                           
  2991                           ;main.c: 208:      ledAlarm = blink1(200,200);
  2992  007D  30C8               	movlw	200
  2993  007E  00F5               	movwf	blink1@tOn
  2994  007F  3000               	movlw	0
  2995  0080  00F6               	movwf	blink1@tOn+1
  2996  0081  30C8               	movlw	200
  2997  0082  00F7               	movwf	blink1@tOff
  2998  0083  3000               	movlw	0
  2999  0084  00F8               	movwf	blink1@tOff+1
  3000  0085  3180  20EA  3180   	fcall	_blink1
  3001  0088  0140               	movlb	0	; select bank0
  3002  0089  00BE               	movwf	??_process
  3003  008A  083E               	movf	??_process,w
  3004  008B  00B2               	movwf	_ledAlarm
  3005                           
  3006                           ;main.c: 209:  break;
  3007  008C  28A3               	goto	l245
  3008  008D                     l1485:
  3009  008D  0830               	movf	_state,w
  3010  008E  00BE               	movwf	??_process
  3011  008F  01BF               	clrf	??_process+1
  3012                           
  3013                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3014                           ; Switch size 1, requested type "simple"
  3015                           ; Number of cases is 1, Range of values is 0 to 0
  3016                           ; switch strategies available:
  3017                           ; Name         Instructions Cycles
  3018                           ; simple_byte            4     3 (average)
  3019                           ; direct_byte            8     6 (fixed)
  3020                           ; jumptable            260     6 (fixed)
  3021                           ;	Chosen strategy is simple_byte
  3022  0090  083F               	movf	??_process+1,w
  3023  0091  3A00               	xorlw	0	; case 0
  3024  0092  1903               	skipnz
  3025  0093  2895               	goto	l1517
  3026  0094  28A3               	goto	l245
  3027  0095                     l1517:
  3028                           
  3029                           ; Switch size 1, requested type "simple"
  3030                           ; Number of cases is 4, Range of values is 1 to 4
  3031                           ; switch strategies available:
  3032                           ; Name         Instructions Cycles
  3033                           ; simple_byte           13     7 (average)
  3034                           ; direct_byte           17     9 (fixed)
  3035                           ; jumptable            263     9 (fixed)
  3036                           ;	Chosen strategy is simple_byte
  3037  0095  083E               	movf	??_process,w
  3038  0096  3A01               	xorlw	1	; case 1
  3039  0097  1903               	skipnz
  3040  0098  282C               	goto	l1447
  3041  0099  3A03               	xorlw	3	; case 2
  3042  009A  1903               	skipnz
  3043  009B  284C               	goto	l236
  3044  009C  3A01               	xorlw	1	; case 3
  3045  009D  1903               	skipnz
  3046  009E  2860               	goto	l240
  3047  009F  3A07               	xorlw	7	; case 4
  3048  00A0  1903               	skipnz
  3049  00A1  287D               	goto	l1481
  3050  00A2  28A3               	goto	l245
  3051  00A3                     l245:
  3052  00A3  0008               	return
  3053  00A4                     __end_of_process:
  3054                           
  3055                           	psect	text4
  3056  015D                     __ptext4:	
  3057 ;; *************** function _initializing *****************
  3058 ;; Defined at:
  3059 ;;		line 80 in file "main.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;		None
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;		None
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  1    wreg      void 
  3066 ;; Registers used:
  3067 ;;		wreg, status,2, status,0, pclath, cstack
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3077 ;;Total ram usage:        0 bytes
  3078 ;; Hardware stack levels used:    1
  3079 ;; Hardware stack levels required when called:    6
  3080 ;; This function calls:
  3081 ;;		_SYSTEM_Initialize
  3082 ;;		_ZYKLUS_Initialize
  3083 ;;		_blink1
  3084 ;;		_get_Zyklus
  3085 ;;		_get_Zyklus1
  3086 ;;		_get_Zyklus2
  3087 ;;		_reset_Zyklus
  3088 ;;		_reset_Zyklus1
  3089 ;;		_reset_Zyklus2
  3090 ;; This function is called by:
  3091 ;;		_main
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           
  3096                           ;psect for function _initializing
  3097  015D                     _initializing:
  3098  015D                     l1439:	
  3099                           ;incstack = 0
  3100                           ; Regs used in _initializing: [wreg+status,2+status,0+pclath+cstack]
  3101                           
  3102                           
  3103                           ;main.c: 82:     SYSTEM_Initialize();
  3104  015D  3182  223E  3181   	fcall	_SYSTEM_Initialize
  3105                           
  3106                           ;main.c: 83:     ZYKLUS_Initialize();
  3107  0160  3182  2231  3181   	fcall	_ZYKLUS_Initialize
  3108                           
  3109                           ;main.c: 87:     get_Zyklus();
  3110  0163  3181  21C1  3181   	fcall	_get_Zyklus
  3111                           
  3112                           ;main.c: 88:     get_Zyklus1();
  3113  0166  3182  2200  3181   	fcall	_get_Zyklus1
  3114                           
  3115                           ;main.c: 89:     get_Zyklus2();
  3116  0169  3181  21ED  3181   	fcall	_get_Zyklus2
  3117                           
  3118                           ;main.c: 90:     reset_Zyklus();
  3119  016C  3182  2263  3181   	fcall	_reset_Zyklus
  3120                           
  3121                           ;main.c: 91:     reset_Zyklus1();
  3122  016F  3182  2257  3181   	fcall	_reset_Zyklus1
  3123                           
  3124                           ;main.c: 92:     reset_Zyklus2();
  3125  0172  3182  224B  3181   	fcall	_reset_Zyklus2
  3126                           
  3127                           ;main.c: 93:     blink1(0, 0);
  3128  0175  3000               	movlw	0
  3129  0176  00F5               	movwf	blink1@tOn
  3130  0177  00F6               	movwf	blink1@tOn+1
  3131  0178  3000               	movlw	0
  3132  0179  00F7               	movwf	blink1@tOff
  3133  017A  00F8               	movwf	blink1@tOff+1
  3134  017B  3180  20EA  3181   	fcall	_blink1
  3135  017E                     l1441:
  3136                           
  3137                           ;main.c: 96:     state = 1;
  3138  017E  0140               	movlb	0	; select bank0
  3139  017F  01B0               	clrf	_state
  3140  0180  0AB0               	incf	_state,f
  3141  0181                     l1443:
  3142                           
  3143                           ;main.c: 97:     currentCode = 0b0000;
  3144  0181  01AF               	clrf	_currentCode
  3145  0182                     l213:
  3146  0182  0008               	return
  3147  0183                     __end_of_initializing:
  3148                           
  3149                           	psect	text5
  3150  024B                     __ptext5:	
  3151 ;; *************** function _reset_Zyklus2 *****************
  3152 ;; Defined at:
  3153 ;;		line 133 in file "zyklus.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;		None
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;		None
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  1    wreg      void 
  3160 ;; Registers used:
  3161 ;;		wreg, status,2, status,0, pclath, cstack
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3169 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3170 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3171 ;;Total ram usage:        1 bytes
  3172 ;; Hardware stack levels used:    1
  3173 ;; Hardware stack levels required when called:    4
  3174 ;; This function calls:
  3175 ;;		_sync
  3176 ;; This function is called by:
  3177 ;;		_initializing
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           
  3182                           ;psect for function _reset_Zyklus2
  3183  024B                     _reset_Zyklus2:
  3184  024B                     l1259:	
  3185                           ;incstack = 0
  3186                           ; Regs used in _reset_Zyklus2: [wreg+status,2+status,0+pclath+cstack]
  3187                           
  3188                           
  3189                           ;zyklus.c: 136:   sync();
  3190  024B  3182  2287  3182   	fcall	_sync
  3191  024E                     l1261:
  3192                           
  3193                           ;zyklus.c: 137:  synchron=0;
  3194  024E  01FB               	clrf	_synchron	;volatile
  3195  024F                     l1263:
  3196                           
  3197                           ;zyklus.c: 138:  zyklen2=0;
  3198  024F  0140               	movlb	0	; select bank0
  3199  0250  01A6               	clrf	_zyklen2	;volatile
  3200  0251  01A7               	clrf	_zyklen2+1	;volatile
  3201  0252                     l1265:
  3202                           
  3203                           ;zyklus.c: 139:  synchron=1;
  3204  0252  3001               	movlw	1
  3205  0253  00F2               	movwf	??_reset_Zyklus2
  3206  0254  0872               	movf	??_reset_Zyklus2,w
  3207  0255  00FB               	movwf	_synchron	;volatile
  3208  0256                     l313:
  3209  0256  0008               	return
  3210  0257                     __end_of_reset_Zyklus2:
  3211                           
  3212                           	psect	text6
  3213  0257                     __ptext6:	
  3214 ;; *************** function _reset_Zyklus1 *****************
  3215 ;; Defined at:
  3216 ;;		line 103 in file "zyklus.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;		None
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;		None
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  1    wreg      void 
  3223 ;; Registers used:
  3224 ;;		wreg, status,2, status,0, pclath, cstack
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3232 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3233 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3234 ;;Total ram usage:        1 bytes
  3235 ;; Hardware stack levels used:    1
  3236 ;; Hardware stack levels required when called:    4
  3237 ;; This function calls:
  3238 ;;		_sync
  3239 ;; This function is called by:
  3240 ;;		_initializing
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           
  3245                           ;psect for function _reset_Zyklus1
  3246  0257                     _reset_Zyklus1:
  3247  0257                     l1251:	
  3248                           ;incstack = 0
  3249                           ; Regs used in _reset_Zyklus1: [wreg+status,2+status,0+pclath+cstack]
  3250                           
  3251                           
  3252                           ;zyklus.c: 106:   sync();
  3253  0257  3182  2287  3182   	fcall	_sync
  3254  025A                     l1253:
  3255                           
  3256                           ;zyklus.c: 107:  synchron=0;
  3257  025A  01FB               	clrf	_synchron	;volatile
  3258  025B                     l1255:
  3259                           
  3260                           ;zyklus.c: 108:  zyklen1=0;
  3261  025B  0140               	movlb	0	; select bank0
  3262  025C  01A8               	clrf	_zyklen1	;volatile
  3263  025D  01A9               	clrf	_zyklen1+1	;volatile
  3264  025E                     l1257:
  3265                           
  3266                           ;zyklus.c: 109:  synchron=1;
  3267  025E  3001               	movlw	1
  3268  025F  00F2               	movwf	??_reset_Zyklus1
  3269  0260  0872               	movf	??_reset_Zyklus1,w
  3270  0261  00FB               	movwf	_synchron	;volatile
  3271  0262                     l304:
  3272  0262  0008               	return
  3273  0263                     __end_of_reset_Zyklus1:
  3274                           
  3275                           	psect	text7
  3276  01ED                     __ptext7:	
  3277 ;; *************** function _get_Zyklus2 *****************
  3278 ;; Defined at:
  3279 ;;		line 116 in file "zyklus.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;		None
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;		None
  3284 ;; Return value:  Size  Location     Type
  3285 ;;                  2  164[None  ] unsigned int 
  3286 ;; Registers used:
  3287 ;;		wreg, status,2, status,0, pclath, cstack
  3288 ;; Tracked objects:
  3289 ;;		On entry : 0/0
  3290 ;;		On exit  : 0/0
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3295 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3296 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3297 ;;Total ram usage:        1 bytes
  3298 ;; Hardware stack levels used:    1
  3299 ;; Hardware stack levels required when called:    4
  3300 ;; This function calls:
  3301 ;;		_sync
  3302 ;; This function is called by:
  3303 ;;		_initializing
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           
  3308                           ;psect for function _get_Zyklus2
  3309  01ED                     _get_Zyklus2:
  3310  01ED                     l1239:	
  3311                           ;incstack = 0
  3312                           ; Regs used in _get_Zyklus2: [wreg+status,2+status,0+pclath+cstack]
  3313                           
  3314                           
  3315                           ;zyklus.c: 118:   static unsigned int kopie=0;;zyklus.c: 119:  sync();
  3316  01ED  3182  2287  3181   	fcall	_sync
  3317  01F0                     l1241:
  3318                           
  3319                           ;zyklus.c: 121:  if (synchron)
  3320  01F0  087B               	movf	_synchron,w	;volatile
  3321  01F1  1903               	btfsc	3,2
  3322  01F2  29F4               	goto	u281
  3323  01F3  29F5               	goto	u280
  3324  01F4                     u281:
  3325  01F4  29FF               	goto	l310
  3326  01F5                     u280:
  3327  01F5                     l1243:
  3328                           
  3329                           ;zyklus.c: 122:  {;zyklus.c: 123:   synchron=0;
  3330  01F5  01FB               	clrf	_synchron	;volatile
  3331  01F6                     l1245:
  3332                           
  3333                           ;zyklus.c: 124:   kopie=zyklen2;
  3334  01F6  0140               	movlb	0	; select bank0
  3335  01F7  0827               	movf	_zyklen2+1,w	;volatile
  3336  01F8  00A1               	movwf	get_Zyklus2@kopie+1
  3337  01F9  0826               	movf	_zyklen2,w	;volatile
  3338  01FA  00A0               	movwf	get_Zyklus2@kopie
  3339  01FB                     l1247:
  3340                           
  3341                           ;zyklus.c: 125:   synchron=1;
  3342  01FB  3001               	movlw	1
  3343  01FC  00F2               	movwf	??_get_Zyklus2
  3344  01FD  0872               	movf	??_get_Zyklus2,w
  3345  01FE  00FB               	movwf	_synchron	;volatile
  3346  01FF                     l310:
  3347  01FF  0008               	return
  3348  0200                     __end_of_get_Zyklus2:
  3349                           
  3350                           	psect	text8
  3351  0200                     __ptext8:	
  3352 ;; *************** function _get_Zyklus1 *****************
  3353 ;; Defined at:
  3354 ;;		line 86 in file "zyklus.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;		None
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;		None
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  2  162[None  ] unsigned int 
  3361 ;; Registers used:
  3362 ;;		wreg, status,2, status,0, pclath, cstack
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3370 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3371 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3372 ;;Total ram usage:        1 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; Hardware stack levels required when called:    4
  3375 ;; This function calls:
  3376 ;;		_sync
  3377 ;; This function is called by:
  3378 ;;		_initializing
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           
  3383                           ;psect for function _get_Zyklus1
  3384  0200                     _get_Zyklus1:
  3385  0200                     l1227:	
  3386                           ;incstack = 0
  3387                           ; Regs used in _get_Zyklus1: [wreg+status,2+status,0+pclath+cstack]
  3388                           
  3389                           
  3390                           ;zyklus.c: 88:   static unsigned int kopie=0;;zyklus.c: 89:  sync();
  3391  0200  3182  2287  3182   	fcall	_sync
  3392  0203                     l1229:
  3393                           
  3394                           ;zyklus.c: 91:  if (synchron)
  3395  0203  087B               	movf	_synchron,w	;volatile
  3396  0204  1903               	btfsc	3,2
  3397  0205  2A07               	goto	u271
  3398  0206  2A08               	goto	u270
  3399  0207                     u271:
  3400  0207  2A12               	goto	l301
  3401  0208                     u270:
  3402  0208                     l1231:
  3403                           
  3404                           ;zyklus.c: 92:  {;zyklus.c: 93:   synchron=0;
  3405  0208  01FB               	clrf	_synchron	;volatile
  3406  0209                     l1233:
  3407                           
  3408                           ;zyklus.c: 94:   kopie=zyklen1;
  3409  0209  0140               	movlb	0	; select bank0
  3410  020A  0829               	movf	_zyklen1+1,w	;volatile
  3411  020B  00A3               	movwf	get_Zyklus1@kopie+1
  3412  020C  0828               	movf	_zyklen1,w	;volatile
  3413  020D  00A2               	movwf	get_Zyklus1@kopie
  3414  020E                     l1235:
  3415                           
  3416                           ;zyklus.c: 95:   synchron=1;
  3417  020E  3001               	movlw	1
  3418  020F  00F2               	movwf	??_get_Zyklus1
  3419  0210  0872               	movf	??_get_Zyklus1,w
  3420  0211  00FB               	movwf	_synchron	;volatile
  3421  0212                     l301:
  3422  0212  0008               	return
  3423  0213                     __end_of_get_Zyklus1:
  3424                           
  3425                           	psect	text9
  3426  00EA                     __ptext9:	
  3427 ;; *************** function _blink1 *****************
  3428 ;; Defined at:
  3429 ;;		line 241 in file "main.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;  tOn             2    5[COMMON] unsigned int 
  3432 ;;  tOff            2    7[COMMON] unsigned int 
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;  status          2    2[BANK0 ] unsigned int 
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      unsigned char 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2, status,0, pclath, cstack
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3444 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3445 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3446 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3447 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3448 ;;Total ram usage:        8 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:    5
  3451 ;; This function calls:
  3452 ;;		_get_Zyklus
  3453 ;;		_reset_Zyklus
  3454 ;; This function is called by:
  3455 ;;		_initializing
  3456 ;;		_process
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           
  3460                           
  3461                           ;psect for function _blink1
  3462  00EA                     _blink1:
  3463  00EA                     l1421:	
  3464                           ;incstack = 0
  3465                           ; Regs used in _blink1: [wreg+status,2+status,0+pclath+cstack]
  3466                           
  3467                           
  3468                           ;main.c: 241: unsigned char blink1(unsigned int tOn, unsigned int tOff);main.c: 242: {;m
      +                          ain.c: 243:     unsigned int status = 0;
  3469  00EA  0140               	movlb	0	; select bank0
  3470  00EB  01BC               	clrf	blink1@status
  3471  00EC  01BD               	clrf	blink1@status+1
  3472  00ED                     l1423:
  3473                           
  3474                           ;main.c: 245:     if(get_Zyklus() <= tOn)
  3475  00ED  3181  21C1  3180   	fcall	_get_Zyklus
  3476  00F0  0873               	movf	?_get_Zyklus+1,w
  3477  00F1  0276               	subwf	blink1@tOn+1,w
  3478  00F2  1D03               	skipz
  3479  00F3  28F6               	goto	u495
  3480  00F4  0872               	movf	?_get_Zyklus,w
  3481  00F5  0275               	subwf	blink1@tOn,w
  3482  00F6                     u495:
  3483  00F6  1C03               	skipc
  3484  00F7  28F9               	goto	u491
  3485  00F8  28FA               	goto	u490
  3486  00F9                     u491:
  3487  00F9  28FF               	goto	l1427
  3488  00FA                     u490:
  3489  00FA                     l1425:
  3490                           
  3491                           ;main.c: 246:     {;main.c: 247:  status = 1;
  3492  00FA  3001               	movlw	1
  3493  00FB  0140               	movlb	0	; select bank0
  3494  00FC  00BC               	movwf	blink1@status
  3495  00FD  3000               	movlw	0
  3496  00FE  00BD               	movwf	blink1@status+1
  3497  00FF                     l1427:
  3498                           
  3499                           ;main.c: 250:     if(get_Zyklus() >= tOn)
  3500  00FF  3181  21C1  3180   	fcall	_get_Zyklus
  3501  0102  0876               	movf	blink1@tOn+1,w
  3502  0103  0273               	subwf	?_get_Zyklus+1,w
  3503  0104  1D03               	skipz
  3504  0105  2908               	goto	u505
  3505  0106  0875               	movf	blink1@tOn,w
  3506  0107  0272               	subwf	?_get_Zyklus,w
  3507  0108                     u505:
  3508  0108  1C03               	skipc
  3509  0109  290B               	goto	u501
  3510  010A  290C               	goto	u500
  3511  010B                     u501:
  3512  010B  290F               	goto	l1431
  3513  010C                     u500:
  3514  010C                     l1429:
  3515                           
  3516                           ;main.c: 251:     {;main.c: 252:  status = 0;
  3517  010C  0140               	movlb	0	; select bank0
  3518  010D  01BC               	clrf	blink1@status
  3519  010E  01BD               	clrf	blink1@status+1
  3520  010F                     l1431:
  3521                           
  3522                           ;main.c: 255:     if(get_Zyklus() >= tOn + tOff)
  3523  010F  0877               	movf	blink1@tOff,w
  3524  0110  0775               	addwf	blink1@tOn,w
  3525  0111  0140               	movlb	0	; select bank0
  3526  0112  00BA               	movwf	??_blink1
  3527  0113  0878               	movf	blink1@tOff+1,w
  3528  0114  3D76               	addwfc	blink1@tOn+1,w
  3529  0115  00BB               	movwf	??_blink1+1
  3530  0116  3181  21C1  3180   	fcall	_get_Zyklus
  3531  0119  0140               	movlb	0	; select bank0
  3532  011A  083B               	movf	??_blink1+1,w
  3533  011B  0273               	subwf	?_get_Zyklus+1,w
  3534  011C  1D03               	skipz
  3535  011D  2920               	goto	u515
  3536  011E  083A               	movf	??_blink1,w
  3537  011F  0272               	subwf	?_get_Zyklus,w
  3538  0120                     u515:
  3539  0120  1C03               	skipc
  3540  0121  2923               	goto	u511
  3541  0122  2924               	goto	u510
  3542  0123                     u511:
  3543  0123  2927               	goto	l1435
  3544  0124                     u510:
  3545  0124                     l1433:
  3546                           
  3547                           ;main.c: 256:     {;main.c: 257:  reset_Zyklus();
  3548  0124  3182  2263  3180   	fcall	_reset_Zyklus
  3549  0127                     l1435:
  3550                           
  3551                           ;main.c: 259:     return status;
  3552  0127  0140               	movlb	0	; select bank0
  3553  0128  083C               	movf	blink1@status,w
  3554  0129                     l254:
  3555  0129  0008               	return
  3556  012A                     __end_of_blink1:
  3557                           
  3558                           	psect	text10
  3559  0263                     __ptext10:	
  3560 ;; *************** function _reset_Zyklus *****************
  3561 ;; Defined at:
  3562 ;;		line 73 in file "zyklus.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;		None
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;		None
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  1    wreg      void 
  3569 ;; Registers used:
  3570 ;;		wreg, status,2, status,0, pclath, cstack
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3578 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3579 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3580 ;;Total ram usage:        1 bytes
  3581 ;; Hardware stack levels used:    1
  3582 ;; Hardware stack levels required when called:    4
  3583 ;; This function calls:
  3584 ;;		_sync
  3585 ;; This function is called by:
  3586 ;;		_initializing
  3587 ;;		_blink1
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           
  3592                           ;psect for function _reset_Zyklus
  3593  0263                     _reset_Zyklus:
  3594  0263                     l1205:	
  3595                           ;incstack = 0
  3596                           ; Regs used in _reset_Zyklus: [wreg+status,2+status,0+pclath+cstack]
  3597                           
  3598                           
  3599                           ;zyklus.c: 76:   sync();
  3600  0263  3182  2287  3182   	fcall	_sync
  3601  0266                     l1207:
  3602                           
  3603                           ;zyklus.c: 77:  synchron=0;
  3604  0266  01FB               	clrf	_synchron	;volatile
  3605  0267                     l1209:
  3606                           
  3607                           ;zyklus.c: 78:  zyklen=0;
  3608  0267  0140               	movlb	0	; select bank0
  3609  0268  01AA               	clrf	_zyklen	;volatile
  3610  0269  01AB               	clrf	_zyklen+1	;volatile
  3611  026A                     l1211:
  3612                           
  3613                           ;zyklus.c: 79:  synchron=1;
  3614  026A  3001               	movlw	1
  3615  026B  00F2               	movwf	??_reset_Zyklus
  3616  026C  0872               	movf	??_reset_Zyklus,w
  3617  026D  00FB               	movwf	_synchron	;volatile
  3618  026E                     l295:
  3619  026E  0008               	return
  3620  026F                     __end_of_reset_Zyklus:
  3621                           
  3622                           	psect	text11
  3623  01C1                     __ptext11:	
  3624 ;; *************** function _get_Zyklus *****************
  3625 ;; Defined at:
  3626 ;;		line 57 in file "zyklus.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;		None
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;		None
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  2    2[COMMON] unsigned int 
  3633 ;; Registers used:
  3634 ;;		wreg, status,2, status,0, pclath, cstack
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3640 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3642 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3643 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3644 ;;Total ram usage:        3 bytes
  3645 ;; Hardware stack levels used:    1
  3646 ;; Hardware stack levels required when called:    4
  3647 ;; This function calls:
  3648 ;;		_sync
  3649 ;; This function is called by:
  3650 ;;		_initializing
  3651 ;;		_blink1
  3652 ;; This function uses a non-reentrant model
  3653 ;;
  3654                           
  3655                           
  3656                           ;psect for function _get_Zyklus
  3657  01C1                     _get_Zyklus:
  3658  01C1                     l1191:	
  3659                           ;incstack = 0
  3660                           ; Regs used in _get_Zyklus: [wreg+status,2+status,0+pclath+cstack]
  3661                           
  3662                           
  3663                           ;zyklus.c: 59:   static unsigned int kopie=0;;zyklus.c: 60:  sync();
  3664  01C1  3182  2287  3181   	fcall	_sync
  3665  01C4                     l1193:
  3666                           
  3667                           ;zyklus.c: 61:  if (synchron)
  3668  01C4  087B               	movf	_synchron,w	;volatile
  3669  01C5  1903               	btfsc	3,2
  3670  01C6  29C8               	goto	u261
  3671  01C7  29C9               	goto	u260
  3672  01C8                     u261:
  3673  01C8  29D3               	goto	l1201
  3674  01C9                     u260:
  3675  01C9                     l1195:
  3676                           
  3677                           ;zyklus.c: 62:  {;zyklus.c: 63:   synchron=0;
  3678  01C9  01FB               	clrf	_synchron	;volatile
  3679  01CA                     l1197:
  3680                           
  3681                           ;zyklus.c: 64:   kopie=zyklen;
  3682  01CA  0140               	movlb	0	; select bank0
  3683  01CB  082B               	movf	_zyklen+1,w	;volatile
  3684  01CC  00A5               	movwf	get_Zyklus@kopie+1
  3685  01CD  082A               	movf	_zyklen,w	;volatile
  3686  01CE  00A4               	movwf	get_Zyklus@kopie
  3687  01CF                     l1199:
  3688                           
  3689                           ;zyklus.c: 65:   synchron=1;
  3690  01CF  3001               	movlw	1
  3691  01D0  00F4               	movwf	??_get_Zyklus
  3692  01D1  0874               	movf	??_get_Zyklus,w
  3693  01D2  00FB               	movwf	_synchron	;volatile
  3694  01D3                     l1201:
  3695                           
  3696                           ;zyklus.c: 67:  return kopie;
  3697  01D3  0140               	movlb	0	; select bank0
  3698  01D4  0825               	movf	get_Zyklus@kopie+1,w
  3699  01D5  00F3               	movwf	?_get_Zyklus+1
  3700  01D6  0824               	movf	get_Zyklus@kopie,w
  3701  01D7  00F2               	movwf	?_get_Zyklus
  3702  01D8                     l292:
  3703  01D8  0008               	return
  3704  01D9                     __end_of_get_Zyklus:
  3705                           
  3706                           	psect	text12
  3707  0287                     __ptext12:	
  3708 ;; *************** function _sync *****************
  3709 ;; Defined at:
  3710 ;;		line 48 in file "zyklus.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;		None
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;		None
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  1    wreg      void 
  3717 ;; Registers used:
  3718 ;;		wreg, status,2, status,0
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3728 ;;Total ram usage:        0 bytes
  3729 ;; Hardware stack levels used:    1
  3730 ;; Hardware stack levels required when called:    3
  3731 ;; This function calls:
  3732 ;;		Nothing
  3733 ;; This function is called by:
  3734 ;;		_get_Zyklus
  3735 ;;		_reset_Zyklus
  3736 ;;		_get_Zyklus1
  3737 ;;		_reset_Zyklus1
  3738 ;;		_get_Zyklus2
  3739 ;;		_reset_Zyklus2
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           
  3744                           ;psect for function _sync
  3745  0287                     _sync:
  3746  0287                     l1137:	
  3747                           ;incstack = 0
  3748                           ; Regs used in _sync: [wreg+status,2+status,0]
  3749                           
  3750  0287                     l1139:	
  3751                           ;zyklus.c: 51:  while (blocked > 0);
  3752                           
  3753  0287  0879               	movf	_blocked,w	;volatile
  3754  0288  1D03               	btfss	3,2
  3755  0289  2A8B               	goto	u251
  3756  028A  2A8C               	goto	u250
  3757  028B                     u251:
  3758  028B  2A87               	goto	l1139
  3759  028C                     u250:
  3760  028C                     l286:
  3761  028C  0008               	return
  3762  028D                     __end_of_sync:
  3763                           
  3764                           	psect	text13
  3765  0231                     __ptext13:	
  3766 ;; *************** function _ZYKLUS_Initialize *****************
  3767 ;; Defined at:
  3768 ;;		line 14 in file "zyklus.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;		None
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;		None
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      void 
  3775 ;; Registers used:
  3776 ;;		wreg, status,2, status,0, pclath, cstack
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3786 ;;Total ram usage:        0 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; Hardware stack levels required when called:    4
  3789 ;; This function calls:
  3790 ;;		_TMR0_SetInterruptHandler
  3791 ;;		_TMR0_StartTimer
  3792 ;; This function is called by:
  3793 ;;		_initializing
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           
  3798                           ;psect for function _ZYKLUS_Initialize
  3799  0231                     _ZYKLUS_Initialize:
  3800  0231                     l1221:	
  3801                           ;incstack = 0
  3802                           ; Regs used in _ZYKLUS_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3803                           
  3804                           
  3805                           ;zyklus.c: 16:    (INTCONbits.GIE = 1);
  3806  0231  178B               	bsf	11,7	;volatile
  3807                           
  3808                           ;zyklus.c: 17:    (INTCONbits.PEIE = 1);
  3809  0232  170B               	bsf	11,6	;volatile
  3810  0233                     l1223:
  3811                           
  3812                           ;zyklus.c: 18:    TMR0_SetInterruptHandler(My_InterruptHandler);
  3813  0233  302A               	movlw	low _My_InterruptHandler
  3814  0234  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  3815  0235  3001               	movlw	high _My_InterruptHandler
  3816  0236  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  3817  0237  3182  228D  3182   	fcall	_TMR0_SetInterruptHandler
  3818  023A                     l1225:
  3819                           
  3820                           ;zyklus.c: 19:    TMR0_StartTimer();
  3821  023A  3182  2293  3182   	fcall	_TMR0_StartTimer
  3822  023D                     l275:
  3823  023D  0008               	return
  3824  023E                     __end_of_ZYKLUS_Initialize:
  3825                           
  3826                           	psect	text14
  3827  0293                     __ptext14:	
  3828 ;; *************** function _TMR0_StartTimer *****************
  3829 ;; Defined at:
  3830 ;;		line 87 in file "mcc_generated_files/tmr0.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;		None
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;		None
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      void 
  3837 ;; Registers used:
  3838 ;;		None
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3848 ;;Total ram usage:        0 bytes
  3849 ;; Hardware stack levels used:    1
  3850 ;; Hardware stack levels required when called:    3
  3851 ;; This function calls:
  3852 ;;		Nothing
  3853 ;; This function is called by:
  3854 ;;		_ZYKLUS_Initialize
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           
  3859                           ;psect for function _TMR0_StartTimer
  3860  0293                     _TMR0_StartTimer:
  3861  0293                     l1189:	
  3862                           ;incstack = 0
  3863                           ; Regs used in _TMR0_StartTimer: []
  3864                           
  3865                           
  3866                           ;mcc_generated_files/tmr0.c: 90:     T0CON0bits.T0EN = 1;
  3867  0293  014B               	movlb	11	; select bank11
  3868  0294  179E               	bsf	30,7	;volatile
  3869  0295                     l132:
  3870  0295  0008               	return
  3871  0296                     __end_of_TMR0_StartTimer:
  3872                           
  3873                           	psect	text15
  3874  023E                     __ptext15:	
  3875 ;; *************** function _SYSTEM_Initialize *****************
  3876 ;; Defined at:
  3877 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;		None
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;		None
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  1    wreg      void 
  3884 ;; Registers used:
  3885 ;;		wreg, status,2, status,0, pclath, cstack
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3895 ;;Total ram usage:        0 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    5
  3898 ;; This function calls:
  3899 ;;		_OSCILLATOR_Initialize
  3900 ;;		_PIN_MANAGER_Initialize
  3901 ;;		_PMD_Initialize
  3902 ;;		_TMR0_Initialize
  3903 ;; This function is called by:
  3904 ;;		_initializing
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           
  3909                           ;psect for function _SYSTEM_Initialize
  3910  023E                     _SYSTEM_Initialize:
  3911  023E                     l1213:	
  3912                           ;incstack = 0
  3913                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3914                           
  3915                           
  3916                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  3917  023E  3182  2279  3182   	fcall	_PMD_Initialize
  3918  0241                     l1215:
  3919                           
  3920                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3921  0241  3181  2183  3182   	fcall	_PIN_MANAGER_Initialize
  3922  0244                     l1217:
  3923                           
  3924                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3925  0244  3182  226F  3182   	fcall	_OSCILLATOR_Initialize
  3926  0247                     l1219:
  3927                           
  3928                           ;mcc_generated_files/mcc.c: 55:     TMR0_Initialize();
  3929  0247  3181  21D9  3182   	fcall	_TMR0_Initialize
  3930  024A                     l48:
  3931  024A  0008               	return
  3932  024B                     __end_of_SYSTEM_Initialize:
  3933                           
  3934                           	psect	text16
  3935  01D9                     __ptext16:	
  3936 ;; *************** function _TMR0_Initialize *****************
  3937 ;; Defined at:
  3938 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;		None
  3941 ;; Auto vars:     Size  Location     Type
  3942 ;;		None
  3943 ;; Return value:  Size  Location     Type
  3944 ;;                  1    wreg      void 
  3945 ;; Registers used:
  3946 ;;		wreg, status,2, status,0, pclath, cstack
  3947 ;; Tracked objects:
  3948 ;;		On entry : 0/0
  3949 ;;		On exit  : 0/0
  3950 ;;		Unchanged: 0/0
  3951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3956 ;;Total ram usage:        0 bytes
  3957 ;; Hardware stack levels used:    1
  3958 ;; Hardware stack levels required when called:    4
  3959 ;; This function calls:
  3960 ;;		_TMR0_SetInterruptHandler
  3961 ;; This function is called by:
  3962 ;;		_SYSTEM_Initialize
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           
  3967                           ;psect for function _TMR0_Initialize
  3968  01D9                     _TMR0_Initialize:
  3969  01D9                     l1177:	
  3970                           ;incstack = 0
  3971                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3972                           
  3973                           
  3974                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x40;
  3975  01D9  3040               	movlw	64
  3976  01DA  014B               	movlb	11	; select bank11
  3977  01DB  009F               	movwf	31	;volatile
  3978                           
  3979                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
  3980  01DC  30F9               	movlw	249
  3981  01DD  009D               	movwf	29	;volatile
  3982  01DE                     l1179:
  3983                           
  3984                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  3985  01DE  019C               	clrf	28	;volatile
  3986  01DF                     l1181:
  3987                           
  3988                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
  3989  01DF  014E               	movlb	14	; select bank14
  3990  01E0  128C               	bcf	12,5	;volatile
  3991  01E1                     l1183:
  3992                           
  3993                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
  3994  01E1  1696               	bsf	22,5	;volatile
  3995  01E2                     l1185:
  3996                           
  3997                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3998  01E2  3097               	movlw	low _TMR0_DefaultInterruptHandler
  3999  01E3  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  4000  01E4  3002               	movlw	high _TMR0_DefaultInterruptHandler
  4001  01E5  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  4002  01E6  3182  228D  3181   	fcall	_TMR0_SetInterruptHandler
  4003  01E9                     l1187:
  4004                           
  4005                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
  4006  01E9  3080               	movlw	128
  4007  01EA  014B               	movlb	11	; select bank11
  4008  01EB  009E               	movwf	30	;volatile
  4009  01EC                     l129:
  4010  01EC  0008               	return
  4011  01ED                     __end_of_TMR0_Initialize:
  4012                           
  4013                           	psect	text17
  4014  028D                     __ptext17:	
  4015 ;; *************** function _TMR0_SetInterruptHandler *****************
  4016 ;; Defined at:
  4017 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  4020 ;;		 -> My_InterruptHandler(1), TMR0_DefaultInterruptHandler(1), 
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;		None
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  1    wreg      void 
  4025 ;; Registers used:
  4026 ;;		wreg
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4032 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4035 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4036 ;;Total ram usage:        2 bytes
  4037 ;; Hardware stack levels used:    1
  4038 ;; Hardware stack levels required when called:    3
  4039 ;; This function calls:
  4040 ;;		Nothing
  4041 ;; This function is called by:
  4042 ;;		_TMR0_Initialize
  4043 ;;		_ZYKLUS_Initialize
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047                           
  4048                           ;psect for function _TMR0_SetInterruptHandler
  4049  028D                     _TMR0_SetInterruptHandler:
  4050  028D                     l1135:	
  4051                           ;incstack = 0
  4052                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  4053                           
  4054                           
  4055                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
  4056  028D  0873               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  4057  028E  0140               	movlb	0	; select bank0
  4058  028F  00C1               	movwf	_TMR0_InterruptHandler+1
  4059  0290  0872               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  4060  0291  00C0               	movwf	_TMR0_InterruptHandler
  4061  0292                     l151:
  4062  0292  0008               	return
  4063  0293                     __end_of_TMR0_SetInterruptHandler:
  4064                           
  4065                           	psect	text18
  4066  0279                     __ptext18:	
  4067 ;; *************** function _PMD_Initialize *****************
  4068 ;; Defined at:
  4069 ;;		line 74 in file "mcc_generated_files/mcc.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;		None
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;		None
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  1    wreg      void 
  4076 ;; Registers used:
  4077 ;;		status,2
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4087 ;;Total ram usage:        0 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; Hardware stack levels required when called:    3
  4090 ;; This function calls:
  4091 ;;		Nothing
  4092 ;; This function is called by:
  4093 ;;		_SYSTEM_Initialize
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096                           
  4097                           
  4098                           ;psect for function _PMD_Initialize
  4099  0279                     _PMD_Initialize:
  4100  0279                     l1141:	
  4101                           ;incstack = 0
  4102                           ; Regs used in _PMD_Initialize: [status,2]
  4103                           
  4104                           
  4105                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  4106  0279  014F               	movlb	15	; select bank15
  4107  027A  0196               	clrf	22	;volatile
  4108                           
  4109                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  4110  027B  0197               	clrf	23	;volatile
  4111                           
  4112                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  4113  027C  0198               	clrf	24	;volatile
  4114                           
  4115                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  4116  027D  0199               	clrf	25	;volatile
  4117                           
  4118                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  4119  027E  019A               	clrf	26	;volatile
  4120                           
  4121                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  4122  027F  019B               	clrf	27	;volatile
  4123  0280                     l54:
  4124  0280  0008               	return
  4125  0281                     __end_of_PMD_Initialize:
  4126                           
  4127                           	psect	text19
  4128  0183                     __ptext19:	
  4129 ;; *************** function _PIN_MANAGER_Initialize *****************
  4130 ;; Defined at:
  4131 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;		None
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;		None
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  1    wreg      void 
  4138 ;; Registers used:
  4139 ;;		wreg, status,2
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4149 ;;Total ram usage:        0 bytes
  4150 ;; Hardware stack levels used:    1
  4151 ;; Hardware stack levels required when called:    3
  4152 ;; This function calls:
  4153 ;;		Nothing
  4154 ;; This function is called by:
  4155 ;;		_SYSTEM_Initialize
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           
  4160                           ;psect for function _PIN_MANAGER_Initialize
  4161  0183                     _PIN_MANAGER_Initialize:
  4162  0183                     l1143:	
  4163                           ;incstack = 0
  4164                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4165                           
  4166                           
  4167                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4168  0183  0140               	movlb	0	; select bank0
  4169  0184  0198               	clrf	24	;volatile
  4170                           
  4171                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4172  0185  0199               	clrf	25	;volatile
  4173                           
  4174                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4175  0186  019A               	clrf	26	;volatile
  4176                           
  4177                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x00;
  4178  0187  0192               	clrf	18	;volatile
  4179  0188                     l1145:
  4180                           
  4181                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  4182  0188  30FF               	movlw	255
  4183  0189  0093               	movwf	19	;volatile
  4184  018A                     l1147:
  4185                           
  4186                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  4187  018A  30FF               	movlw	255
  4188  018B  0094               	movwf	20	;volatile
  4189                           
  4190                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
  4191  018C  017E               	movlb	62	; select bank62
  4192  018D  01CE               	clrf	78	;volatile
  4193  018E                     l1149:
  4194                           
  4195                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xFF;
  4196  018E  30FF               	movlw	255
  4197  018F  00C3               	movwf	67	;volatile
  4198  0190                     l1151:
  4199                           
  4200                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xFF;
  4201  0190  30FF               	movlw	255
  4202  0191  00B8               	movwf	56	;volatile
  4203                           
  4204                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
  4205  0192  01E5               	clrf	101	;volatile
  4206                           
  4207                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
  4208  0193  01C4               	clrf	68	;volatile
  4209                           
  4210                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
  4211  0194  01B9               	clrf	57	;volatile
  4212                           
  4213                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
  4214  0195  01CF               	clrf	79	;volatile
  4215                           
  4216                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  4217  0196  01BA               	clrf	58	;volatile
  4218                           
  4219                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  4220  0197  01C5               	clrf	69	;volatile
  4221                           
  4222                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  4223  0198  01D0               	clrf	80	;volatile
  4224  0199                     l1153:
  4225                           
  4226                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
  4227  0199  30FF               	movlw	255
  4228  019A  00BB               	movwf	59	;volatile
  4229  019B                     l1155:
  4230                           
  4231                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
  4232  019B  30FF               	movlw	255
  4233  019C  00C6               	movwf	70	;volatile
  4234  019D                     l1157:
  4235                           
  4236                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  4237  019D  30FF               	movlw	255
  4238  019E  00D1               	movwf	81	;volatile
  4239  019F                     l1159:
  4240                           
  4241                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
  4242  019F  30FF               	movlw	255
  4243  01A0  00BC               	movwf	60	;volatile
  4244  01A1                     l1161:
  4245                           
  4246                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
  4247  01A1  30FF               	movlw	255
  4248  01A2  00C7               	movwf	71	;volatile
  4249  01A3                     l1163:
  4250                           
  4251                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  4252  01A3  30FF               	movlw	255
  4253  01A4  00D2               	movwf	82	;volatile
  4254  01A5                     l1165:
  4255                           
  4256                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x08;
  4257  01A5  3008               	movlw	8
  4258  01A6  00E8               	movwf	104	;volatile
  4259  01A7                     l103:
  4260  01A7  0008               	return
  4261  01A8                     __end_of_PIN_MANAGER_Initialize:
  4262                           
  4263                           	psect	text20
  4264  026F                     __ptext20:	
  4265 ;; *************** function _OSCILLATOR_Initialize *****************
  4266 ;; Defined at:
  4267 ;;		line 58 in file "mcc_generated_files/mcc.c"
  4268 ;; Parameters:    Size  Location     Type
  4269 ;;		None
  4270 ;; Auto vars:     Size  Location     Type
  4271 ;;		None
  4272 ;; Return value:  Size  Location     Type
  4273 ;;                  1    wreg      void 
  4274 ;; Registers used:
  4275 ;;		wreg, status,2
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4285 ;;Total ram usage:        0 bytes
  4286 ;; Hardware stack levels used:    1
  4287 ;; Hardware stack levels required when called:    3
  4288 ;; This function calls:
  4289 ;;		Nothing
  4290 ;; This function is called by:
  4291 ;;		_SYSTEM_Initialize
  4292 ;; This function uses a non-reentrant model
  4293 ;;
  4294                           
  4295                           
  4296                           ;psect for function _OSCILLATOR_Initialize
  4297  026F                     _OSCILLATOR_Initialize:
  4298  026F                     l1167:	
  4299                           ;incstack = 0
  4300                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4301                           
  4302                           
  4303                           ;mcc_generated_files/mcc.c: 61:     OSCCON1 = 0x62;
  4304  026F  3062               	movlw	98
  4305  0270  0151               	movlb	17	; select bank17
  4306  0271  008D               	movwf	13	;volatile
  4307  0272                     l1169:
  4308                           
  4309                           ;mcc_generated_files/mcc.c: 63:     OSCCON3 = 0x00;
  4310  0272  018F               	clrf	15	;volatile
  4311  0273                     l1171:
  4312                           
  4313                           ;mcc_generated_files/mcc.c: 65:     OSCEN = 0x00;
  4314  0273  0191               	clrf	17	;volatile
  4315                           
  4316                           ;mcc_generated_files/mcc.c: 67:     OSCFRQ = 0x02;
  4317  0274  3002               	movlw	2
  4318  0275  0093               	movwf	19	;volatile
  4319  0276                     l1173:
  4320                           
  4321                           ;mcc_generated_files/mcc.c: 69:     OSCSTAT = 0x00;
  4322  0276  0190               	clrf	16	;volatile
  4323  0277                     l1175:
  4324                           
  4325                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  4326  0277  0192               	clrf	18	;volatile
  4327  0278                     l51:
  4328  0278  0008               	return
  4329  0279                     __end_of_OSCILLATOR_Initialize:
  4330                           
  4331                           	psect	intentry
  4332  0004                     __pintentry:	
  4333 ;; *************** function _INTERRUPT_InterruptManager *****************
  4334 ;; Defined at:
  4335 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;		None
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;		None
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  1    wreg      void 
  4342 ;; Registers used:
  4343 ;;		wreg, status,2, status,0, pclath, cstack
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4353 ;;Total ram usage:        0 bytes
  4354 ;; Hardware stack levels used:    1
  4355 ;; Hardware stack levels required when called:    2
  4356 ;; This function calls:
  4357 ;;		_TMR0_ISR
  4358 ;; This function is called by:
  4359 ;;		Interrupt level 1
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363  0004                     _INTERRUPT_InterruptManager:
  4364                           
  4365                           ;incstack = 0
  4366  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4367                           
  4368                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  4369  0005  3180               	pagesel	$
  4370  0006                     i1l1389:
  4371                           
  4372                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  4373  0006  014E               	movlb	14	; select bank14
  4374  0007  1E96               	btfss	22,5	;volatile
  4375  0008  280A               	goto	u47_21
  4376  0009  280B               	goto	u47_20
  4377  000A                     u47_21:
  4378  000A  2812               	goto	i1l13
  4379  000B                     u47_20:
  4380  000B                     i1l1391:
  4381  000B  1E8C               	btfss	12,5	;volatile
  4382  000C  280E               	goto	u48_21
  4383  000D  280F               	goto	u48_20
  4384  000E                     u48_21:
  4385  000E  2812               	goto	i1l13
  4386  000F                     u48_20:
  4387  000F                     i1l1393:
  4388                           
  4389                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  4390  000F  3182  2222  3180   	fcall	_TMR0_ISR
  4391  0012                     i1l13:	
  4392                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  4393                           
  4394  0012  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4395  0013  0009               	retfie
  4396  0014                     __end_of_INTERRUPT_InterruptManager:
  4397                           
  4398                           	psect	text22
  4399  0222                     __ptext22:	
  4400 ;; *************** function _TMR0_ISR *****************
  4401 ;; Defined at:
  4402 ;;		line 121 in file "mcc_generated_files/tmr0.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;		None
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;		None
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  1    wreg      void 
  4409 ;; Registers used:
  4410 ;;		wreg, status,2, status,0, pclath, cstack
  4411 ;; Tracked objects:
  4412 ;;		On entry : 0/0
  4413 ;;		On exit  : 0/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4420 ;;Total ram usage:        0 bytes
  4421 ;; Hardware stack levels used:    1
  4422 ;; Hardware stack levels required when called:    1
  4423 ;; This function calls:
  4424 ;;		Absolute function
  4425 ;;		_My_InterruptHandler
  4426 ;;		_TMR0_DefaultInterruptHandler
  4427 ;; This function is called by:
  4428 ;;		_INTERRUPT_InterruptManager
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432                           
  4433                           ;psect for function _TMR0_ISR
  4434  0222                     _TMR0_ISR:
  4435  0222                     i1l1305:	
  4436                           ;incstack = 0
  4437                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  4438                           
  4439                           
  4440                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
  4441  0222  014E               	movlb	14	; select bank14
  4442  0223  128C               	bcf	12,5	;volatile
  4443  0224                     i1l1307:
  4444                           
  4445                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
  4446  0224  0140               	movlb	0	; select bank0
  4447  0225  0840               	movf	_TMR0_InterruptHandler,w
  4448  0226  0441               	iorwf	_TMR0_InterruptHandler+1,w
  4449  0227  1903               	btfsc	3,2
  4450  0228  2A2A               	goto	u33_21
  4451  0229  2A2B               	goto	u33_20
  4452  022A                     u33_21:
  4453  022A  2A30               	goto	i1l148
  4454  022B                     u33_20:
  4455  022B                     i1l1309:
  4456                           
  4457                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
  4458  022B  0841               	movf	_TMR0_InterruptHandler+1,w
  4459  022C  008A               	movwf	10
  4460  022D  0840               	movf	_TMR0_InterruptHandler,w
  4461  022E  000A               	callw
  4462  022F  3182               	pagesel	$
  4463  0230                     i1l148:
  4464  0230  0008               	return
  4465  0231                     __end_of_TMR0_ISR:
  4466                           
  4467                           	psect	text23
  4468  012A                     __ptext23:	
  4469 ;; *************** function _My_InterruptHandler *****************
  4470 ;; Defined at:
  4471 ;;		line 24 in file "zyklus.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;		None
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;		None
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  1    wreg      void 
  4478 ;; Registers used:
  4479 ;;		wreg, status,2, status,0
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4487 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4488 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4489 ;;Total ram usage:        2 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; This function calls:
  4492 ;;		Nothing
  4493 ;; This function is called by:
  4494 ;;		_ZYKLUS_Initialize
  4495 ;;		_TMR0_ISR
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           
  4500                           ;psect for function _My_InterruptHandler
  4501  012A                     _My_InterruptHandler:
  4502  012A                     i1l1285:	
  4503                           ;incstack = 0
  4504                           ; Regs used in _My_InterruptHandler: [wreg+status,2+status,0]
  4505                           
  4506                           
  4507                           ;zyklus.c: 27:  if (synchron)
  4508  012A  087B               	movf	_synchron,w	;volatile
  4509  012B  1903               	btfsc	3,2
  4510  012C  292E               	goto	u32_21
  4511  012D  292F               	goto	u32_20
  4512  012E                     u32_21:
  4513  012E  2958               	goto	i1l1303
  4514  012F                     u32_20:
  4515  012F                     i1l1287:
  4516                           
  4517                           ;zyklus.c: 28:  {;zyklus.c: 29:   synchron=0;
  4518  012F  01FB               	clrf	_synchron	;volatile
  4519  0130                     i1l1289:
  4520                           
  4521                           ;zyklus.c: 30:   zyklen+=(unsigned int)blocked;
  4522  0130  0879               	movf	_blocked,w	;volatile
  4523  0131  00F0               	movwf	??_My_InterruptHandler
  4524  0132  01F1               	clrf	??_My_InterruptHandler+1
  4525  0133  0870               	movf	??_My_InterruptHandler,w
  4526  0134  0140               	movlb	0	; select bank0
  4527  0135  07AA               	addwf	_zyklen,f	;volatile
  4528  0136  0871               	movf	??_My_InterruptHandler+1,w
  4529  0137  3DAB               	addwfc	_zyklen+1,f	;volatile
  4530  0138                     i1l1291:
  4531                           
  4532                           ;zyklus.c: 31:   zyklen++;
  4533  0138  3001               	movlw	1
  4534  0139  07AA               	addwf	_zyklen,f	;volatile
  4535  013A  3000               	movlw	0
  4536  013B  3DAB               	addwfc	_zyklen+1,f	;volatile
  4537  013C                     i1l1293:
  4538                           
  4539                           ;zyklus.c: 32:   zyklen1+=(unsigned int)blocked;
  4540  013C  0879               	movf	_blocked,w	;volatile
  4541  013D  00F0               	movwf	??_My_InterruptHandler
  4542  013E  01F1               	clrf	??_My_InterruptHandler+1
  4543  013F  0870               	movf	??_My_InterruptHandler,w
  4544  0140  07A8               	addwf	_zyklen1,f	;volatile
  4545  0141  0871               	movf	??_My_InterruptHandler+1,w
  4546  0142  3DA9               	addwfc	_zyklen1+1,f	;volatile
  4547  0143                     i1l1295:
  4548                           
  4549                           ;zyklus.c: 33:   zyklen1++;
  4550  0143  3001               	movlw	1
  4551  0144  07A8               	addwf	_zyklen1,f	;volatile
  4552  0145  3000               	movlw	0
  4553  0146  3DA9               	addwfc	_zyklen1+1,f	;volatile
  4554  0147                     i1l1297:
  4555                           
  4556                           ;zyklus.c: 34:   zyklen2+=(unsigned int)blocked;
  4557  0147  0879               	movf	_blocked,w	;volatile
  4558  0148  00F0               	movwf	??_My_InterruptHandler
  4559  0149  01F1               	clrf	??_My_InterruptHandler+1
  4560  014A  0870               	movf	??_My_InterruptHandler,w
  4561  014B  07A6               	addwf	_zyklen2,f	;volatile
  4562  014C  0871               	movf	??_My_InterruptHandler+1,w
  4563  014D  3DA7               	addwfc	_zyklen2+1,f	;volatile
  4564  014E                     i1l1299:
  4565                           
  4566                           ;zyklus.c: 35:   zyklen2++;
  4567  014E  3001               	movlw	1
  4568  014F  07A6               	addwf	_zyklen2,f	;volatile
  4569  0150  3000               	movlw	0
  4570  0151  3DA7               	addwfc	_zyklen2+1,f	;volatile
  4571                           
  4572                           ;zyklus.c: 36:   blocked=0;
  4573  0152  01F9               	clrf	_blocked	;volatile
  4574  0153                     i1l1301:
  4575                           
  4576                           ;zyklus.c: 37:   synchron=1;
  4577  0153  3001               	movlw	1
  4578  0154  00F0               	movwf	??_My_InterruptHandler
  4579  0155  0870               	movf	??_My_InterruptHandler,w
  4580  0156  00FB               	movwf	_synchron	;volatile
  4581                           
  4582                           ;zyklus.c: 38:  }
  4583  0157  295C               	goto	i1l280
  4584  0158                     i1l1303:
  4585                           
  4586                           ;zyklus.c: 40:  {;zyklus.c: 41:   blocked++;
  4587  0158  3001               	movlw	1
  4588  0159  00F0               	movwf	??_My_InterruptHandler
  4589  015A  0870               	movf	??_My_InterruptHandler,w
  4590  015B  07F9               	addwf	_blocked,f	;volatile
  4591  015C                     i1l280:
  4592  015C  0008               	return
  4593  015D                     __end_of_My_InterruptHandler:
  4594                           
  4595                           	psect	text24
  4596  0297                     __ptext24:	
  4597 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4598 ;; Defined at:
  4599 ;;		line 138 in file "mcc_generated_files/tmr0.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;		None
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;		None
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  1    wreg      void 
  4606 ;; Registers used:
  4607 ;;		None
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4617 ;;Total ram usage:        0 bytes
  4618 ;; Hardware stack levels used:    1
  4619 ;; This function calls:
  4620 ;;		Nothing
  4621 ;; This function is called by:
  4622 ;;		_TMR0_Initialize
  4623 ;;		_TMR0_ISR
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           
  4628                           ;psect for function _TMR0_DefaultInterruptHandler
  4629  0297                     _TMR0_DefaultInterruptHandler:
  4630  0297                     i1l154:	
  4631                           ;incstack = 0
  4632                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  4633                           
  4634  0297  0008               	return
  4635  0298                     __end_of_TMR0_DefaultInterruptHandler:
  4636  007E                     btemp	set	126	;btemp
  4637  007E                     int$flags	set	126
  4638  007E                     wtemp0	set	126
  4639                           
  4640                           	psect	config
  4641                           
  4642                           ;Config register CONFIG1 @ 0x8007
  4643                           ;	External Oscillator mode selection bits
  4644                           ;	FEXTOSC = OFF, Oscillator not enabled
  4645                           ;	Power-up default value for COSC bits
  4646                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
  4647                           ;	Clock Out Enable bit
  4648                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  4649                           ;	Clock Switch Enable bit
  4650                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  4651                           ;	Fail-Safe Clock Monitor Enable bit
  4652                           ;	FCMEN = ON, FSCM timer enabled
  4653  8007                     	org	32775
  4654  8007  3FEC               	dw	16364
  4655                           
  4656                           ;Config register CONFIG2 @ 0x8008
  4657                           ;	Master Clear Enable bit
  4658                           ;	MCLRE = ON, MCLR pin is Master Clear function
  4659                           ;	Power-up Timer Enable bit
  4660                           ;	PWRTE = OFF, PWRT disabled
  4661                           ;	Low-Power BOR enable bit
  4662                           ;	LPBOREN = OFF, ULPBOR disabled
  4663                           ;	Brown-out reset enable bits
  4664                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  4665                           ;	Brown-out Reset Voltage Selection
  4666                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  4667                           ;	Zero-cross detect disable
  4668                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  4669                           ;	Peripheral Pin Select one-way control
  4670                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  4671                           ;	Stack Overflow/Underflow Reset Enable bit
  4672                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  4673  8008                     	org	32776
  4674  8008  3FFF               	dw	16383
  4675                           
  4676                           ;Config register CONFIG3 @ 0x8009
  4677                           ;	WDT Period Select bits
  4678                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4679                           ;	WDT operating mode
  4680                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  4681                           ;	WDT Window Select bits
  4682                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  4683                           ;	WDT input clock selector
  4684                           ;	WDTCCS = SC, Software Control
  4685  8009                     	org	32777
  4686  8009  3F9F               	dw	16287
  4687                           
  4688                           ;Config register CONFIG4 @ 0x800A
  4689                           ;	Boot Block Size Selection bits
  4690                           ;	BBSIZE = BB512, 512 words boot block size
  4691                           ;	Boot Block Enable bit
  4692                           ;	BBEN = OFF, Boot Block disabled
  4693                           ;	SAF Enable bit
  4694                           ;	SAFEN = OFF, SAF disabled
  4695                           ;	Application Block Write Protection bit
  4696                           ;	WRTAPP = OFF, Application Block not write protected
  4697                           ;	Boot Block Write Protection bit
  4698                           ;	WRTB = OFF, Boot Block not write protected
  4699                           ;	Configuration Register Write Protection bit
  4700                           ;	WRTC = OFF, Configuration Register not write protected
  4701                           ;	Storage Area Flash Write Protection bit
  4702                           ;	WRTSAF = OFF, SAF not write protected
  4703                           ;	Low Voltage Programming Enable bit
  4704                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  4705  800A                     	org	32778
  4706  800A  3FFF               	dw	16383
  4707                           
  4708                           ;Config register CONFIG5 @ 0x800B
  4709                           ;	UserNVM Program memory code protection bit
  4710                           ;	CP = OFF, UserNVM code protection disabled
  4711  800B                     	org	32779
  4712  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         28
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80      6      34
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> My_InterruptHandler(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> My_InterruptHandler(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _process->_blink1
    _initializing->_blink1
    _blink1->_get_Zyklus
    _ZYKLUS_Initialize->_TMR0_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_ISR->_My_InterruptHandler

Critical Paths under _main in BANK0

    _main->_process
    _process->_blink1
    _initializing->_blink1

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1488
                       _initializing
                            _process
                          _readInput
                        _writeOutput
 ---------------------------------------------------------------------------------
 (1) _writeOutput                                          2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _readInput                                            4     4      0      92
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _process                                              2     2      0     524
                                              4 BANK0      2     2      0
                             _blink1
 ---------------------------------------------------------------------------------
 (1) _initializing                                         0     0      0     872
                  _SYSTEM_Initialize
                  _ZYKLUS_Initialize
                             _blink1
                         _get_Zyklus
                        _get_Zyklus1
                        _get_Zyklus2
                       _reset_Zyklus
                      _reset_Zyklus1
                      _reset_Zyklus2
 ---------------------------------------------------------------------------------
 (2) _reset_Zyklus2                                        1     1      0       0
                                              2 COMMON     1     1      0
                               _sync
 ---------------------------------------------------------------------------------
 (2) _reset_Zyklus1                                        1     1      0       0
                                              2 COMMON     1     1      0
                               _sync
 ---------------------------------------------------------------------------------
 (2) _get_Zyklus2                                          1     1      0       0
                                              2 COMMON     1     1      0
                               _sync
 ---------------------------------------------------------------------------------
 (2) _get_Zyklus1                                          1     1      0       0
                                              2 COMMON     1     1      0
                               _sync
 ---------------------------------------------------------------------------------
 (2) _blink1                                               8     4      4     524
                                              5 COMMON     4     0      4
                                              0 BANK0      4     4      0
                         _get_Zyklus
                       _reset_Zyklus
 ---------------------------------------------------------------------------------
 (3) _reset_Zyklus                                         1     1      0       0
                                              2 COMMON     1     1      0
                               _sync
 ---------------------------------------------------------------------------------
 (3) _get_Zyklus                                           3     1      2       0
                                              2 COMMON     3     1      2
                               _sync
 ---------------------------------------------------------------------------------
 (4) _sync                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ZYKLUS_Initialize                                    0     0      0     174
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     174
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
                _My_InterruptHandler *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _My_InterruptHandler                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initializing
     _SYSTEM_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _PMD_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
     _ZYKLUS_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
     _blink1
       _get_Zyklus
         _sync
       _reset_Zyklus
         _sync
     _get_Zyklus
       _sync
     _get_Zyklus1
       _sync
     _get_Zyklus2
       _sync
     _reset_Zyklus
       _sync
     _reset_Zyklus1
       _sync
     _reset_Zyklus2
       _sync
   _process
     _blink1
       _get_Zyklus
         _sync
       _reset_Zyklus
         _sync
   _readInput
   _writeOutput

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _My_InterruptHandler *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      6      22       6       42.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      2E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Mar 05 12:08:24 2021

                                      l51 0278                                        l54 0280  
                                      l48 024A                                       l103 01A7  
                                     l132 0295                                       l301 0212  
                                     l213 0182                                       l310 01FF  
                                     l151 0292                                       l304 0262  
                                     l240 0060                                       l129 01EC  
                                     l313 0256                                       l226 00E9  
                                     l218 0216                                       l236 004C  
                                     l245 00A3                                       l254 0129  
                                     l248 01C0                                       l275 023D  
                                     l292 01D8                                       l286 028C  
                                     l295 026E                                       u250 028C  
                                     u251 028B                                       u260 01C9  
                                     u500 010C                                       u261 01C8  
                                     u501 010B                                       u510 0124  
                                     u270 0208                                       u511 0123  
                                     u271 0207                                       u280 01F5  
                                     u520 0031                                       u505 0108  
                                     u281 01F4                                       u521 0030  
                                     u345 00B2                                       u530 0037  
                                     u515 0120                                       u531 0036  
                                     u355 00BD                                       u540 0047  
                                     u541 0046                                       u365 00CD  
                                     u550 0053                                       u551 0052  
                                     u375 00D8                                       u560 005B  
                                     u561 005A                                       u465 01B5  
                                     u490 00FA                                       u570 0069  
                                     u491 00F9                                       u571 0068  
                                     u580 0072                                       u581 0071  
                                     u590 0078                                       u495 00F6  
                                     u591 0077                   __size_of_PMD_Initialize 0008  
                                     wreg 0009                           _switchCodeInput 0034  
                                    l1201 01D3                                      l1211 026A  
                                    l1141 0279                                      l1213 023E  
                                    l1221 0231                                      l1205 0263  
                                    l1151 0190                                      l1143 0183  
                                    l1135 028D                                      l1215 0241  
                                    l1223 0233                                      l1207 0266  
                                    l1231 0208                                      l1161 01A1  
                                    l1153 0199                                      l1145 0188  
                                    l1217 0244                                      l1225 023A  
                                    l1137 0287                                      l1209 0267  
                                    l1233 0209                                      l1241 01F0  
                                    l1321 00AA                                      l1171 0273  
                                    l1163 01A3                                      l1155 019B  
                                    l1147 018A                                      l1219 0247  
                                    l1139 0287                                      l1235 020E  
                                    l1227 0200                                      l1243 01F5  
                                    l1251 0257                                      l1331 00D5  
                                    l1323 00AF                                      l1173 0276  
                                    l1165 01A5                                      l1157 019D  
                                    l1149 018E                                      l1181 01DF  
                                    l1421 00EA                                      l1229 0203  
                                    l1245 01F6                                      l1253 025A  
                                    l1261 024E                                      l1333 00E0  
                                    l1325 00BA                                      l1317 00A4  
                                    l1175 0277                                      l1167 026F  
                                    l1159 019F                                      l1183 01E1  
                                    l1191 01C1                                      l1431 010F  
                                    l1423 00ED                                      l1247 01FB  
                                    l1239 01ED                                      l1255 025B  
                                    l1263 024F                                      l1335 00E4  
                                    l1327 00C5                                      l1319 00A5  
                                    l1169 0272                                      l1185 01E2  
                                    l1177 01D9                                      l1193 01C4  
                                    l1433 0124                                      l1425 00FA  
                                    l1257 025E                                      l1265 0252  
                                    l1441 017E                                      l1329 00CA  
                                    l1187 01E9                                      l1179 01DE  
                                    l1195 01C9                                      l1435 0127  
                                    l1427 00FF                                      l1259 024B  
                                    l1443 0181                                      l1451 0037  
                                    l1189 0293                                      l1197 01CA  
                                    l1429 010C                                      l1517 0095  
                                    l1461 004E                                      l1453 003B  
                                    l1445 0028                                      l1199 01CF  
                                    l1439 015D                                      l1471 0069  
                                    l1463 0053                                      l1455 003D  
                                    l1447 002C                                      l1383 01A8  
                                    l1481 007D                                      l1473 006D  
                                    l1465 0056                                      l1449 0031  
                                    l1457 0041                                      l1385 01AD  
                                    l1475 0072                                      l1467 005B  
                                    l1459 0047                                      l1387 01B2  
                                    l1491 0213                                      l1477 0078  
                                    l1469 0064                                      l1485 008D  
                                    l1493 0219                                      l1495 021C  
                                    _LATA 0018                                      _LATB 0019  
                                    _LATC 001A                                      _PMD0 0796  
                                    i1l13 0012                                      _PMD1 0797  
                                    _PMD2 0798                                      _PMD3 0799  
                                    _PMD4 079A                                      _PMD5 079B  
                                    _WPUA 1F39                                      _WPUB 1F44  
                                    _WPUC 1F4F                                      _WPUE 1F65  
                                    _main 0213                           _TMR0_StartTimer 0293  
                                    fsr0h 0005                                      indf0 0000  
                                    fsr0l 0004                                      btemp 007E  
                                    _sync 0287                                      start 0014  
              __size_of_ZYKLUS_Initialize 000D                   __end_of_TMR0_Initialize 01ED  
          ??_TMR0_DefaultInterruptHandler 0070            __size_of_OSCILLATOR_Initialize 000A  
           __end_of_OSCILLATOR_Initialize 0279                                     ?_main 0070  
                                   ?_sync 0070                                     i1l154 0297  
                                   i1l148 0230                                     i1l280 015C  
                                   _OSCEN 0891                                     u32_20 012F  
                                   u32_21 012E                                     u33_20 022B  
                                   _TMR0H 059D                                     u33_21 022A  
                                   _TMR0L 059C                                     _PORTA 000C  
                                   _PORTC 000E                                     u47_20 000B  
                                   u47_21 000A                                     u48_20 000F  
                                   u48_21 000E                                     _TRISA 0012  
                                   _TRISB 0013                                     _TRISC 0014  
                             _writeOutput 01A8         __size_of_TMR0_SetInterruptHandler 0006  
               ?_TMR0_SetInterruptHandler 0072                          __end_of_TMR0_ISR 0231  
             __end_of_My_InterruptHandler 015D                                     _state 0030  
                                   pclath 000A                           __end_of_process 00A4  
                                   status 0003                                     wtemp0 007E  
                         __initialization 0016                              __end_of_main 0222  
                            __end_of_sync 028D               ?_INTERRUPT_InterruptManager 0070  
                                  ??_main 0079                                    ??_sync 0072  
                 __end_of_TMR0_StartTimer 0296                                    _ANSELA 1F38  
                                  _ANSELB 1F43                                    _ANSELC 1F4E  
                                  _T0CON0 059E                                    _T0CON1 059F  
                                  i1l1301 0153                                    i1l1303 0158  
                                  i1l1305 0222                                    i1l1307 0224  
                                  i1l1309 022B                                    _ODCONA 1F3A  
                                  _ODCONB 1F45                                    i1l1291 0138  
                                  _ODCONC 1F50                                    i1l1293 013C  
                                  i1l1285 012A                                    i1l1295 0143  
                                  i1l1287 012F                                    i1l1391 000B  
                                  i1l1297 0147                                    i1l1289 0130  
                                  i1l1393 000F                                    i1l1299 014E  
                                  i1l1389 0006                                    _INLVLA 1F3C  
                                  _INLVLB 1F47                                    _INLVLC 1F52  
                                  _INLVLE 1F68                                    _OSCFRQ 0893  
                    __size_of_get_Zyklus1 0013                      __size_of_get_Zyklus2 0013  
                           ?_initializing 0070                           get_Zyklus@kopie 0024  
                                  _blink1 00EA                          ?_TMR0_Initialize 0070  
                                  _zyklen 002A                            _PMD_Initialize 0279  
                            __pdataCOMMON 007B                                 ??_process 003E  
TMR0_SetInterruptHandler@InterruptHandler 0072                     __end_of_reset_Zyklus1 0263  
                   __end_of_reset_Zyklus2 0257                         _SYSTEM_Initialize 023E  
                 __end_of__initialization 0024                        ?_SYSTEM_Initialize 0070  
                          ??_initializing 0079                            __pcstackCOMMON 0070  
                     ??_SYSTEM_Initialize 0074                                 ?_TMR0_ISR 0070  
                  __end_of_PMD_Initialize 0281                          ?_TMR0_StartTimer 0070  
               __end_of_SYSTEM_Initialize 024B                                __pbssBANK0 0020  
                      __size_of_readInput 0046                              _falseCounter 002D  
                              __pmaintext 0213          __end_of_TMR0_SetInterruptHandler 0293  
                              ??_TMR0_ISR 0072                                   ?_blink1 0075  
                              __pintentry 0004                           ?_PMD_Initialize 0070  
                            ?_writeOutput 0070                                _get_Zyklus 01C1  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                                 _OSCSTAT 0890                                   _OSCTUNE 0892  
                                 _SLRCONA 1F3B                                   _SLRCONB 1F46  
                                 _SLRCONC 1F51                          get_Zyklus1@kopie 0022  
                        get_Zyklus2@kopie 0020                                _copyOutput 0039  
                           ?_reset_Zyklus 0070                           __size_of_blink1 0040  
                                 _blocked 0079                                   __ptext1 01A8  
                                 __ptext2 00A4                                   __ptext3 0028  
                                 __ptext4 015D                                   __ptext5 024B  
                                 __ptext6 0257                                   __ptext7 01ED  
                                 __ptext8 0200                                   __ptext9 00EA  
                       __end_of_readInput 00EA                                   _newCode 002E  
                   _OSCILLATOR_Initialize 026F                          readInput@negEdge 0075  
                ??_PIN_MANAGER_Initialize 0072                      __end_of_initializing 0183  
                              blink1@tOff 0077                                   _process 0028  
                        readInput@posEdge 0074                __size_of_SYSTEM_Initialize 000D  
                                 clrloop0 0282                      end_of_initialization 0024  
                                 _zyklen1 0028                                   _zyklen2 0026  
                          ??_reset_Zyklus 0072              __size_of_My_InterruptHandler 0033  
            _switchProgrammingCodeNegEdge 0038              _switchProgrammingCodePosEdge 0037  
                _TMR0_SetInterruptHandler 028D                               ?_get_Zyklus 0072  
                           ??_get_Zyklus1 0072                             ??_get_Zyklus2 0072  
                          __end_of_blink1 012A                             __pidataCOMMON 0296  
                       __size_of_TMR0_ISR 000F                    ?_OSCILLATOR_Initialize 0070  
                     start_initialization 0016                  __size_of_TMR0_Initialize 0014  
         __size_of_PIN_MANAGER_Initialize 0025                      __size_of_writeOutput 0019  
                     __size_of_get_Zyklus 0018                          ??_PMD_Initialize 0072  
                     __end_of_get_Zyklus1 0213                       __end_of_get_Zyklus2 0200  
                                ??_blink1 003A                    __size_of_reset_Zyklus1 000C  
                  __size_of_reset_Zyklus2 000C                     __size_of_initializing 0026  
                    __end_of_reset_Zyklus 026F                               __pbssCOMMON 0079  
                               ___latbits 0002                             __pcstackBANK0 003A  
                   _TMR0_InterruptHandler 0040                                 __pnvBANK0 0040  
                __size_of_TMR0_StartTimer 0003                    _PIN_MANAGER_Initialize 0183  
                            _initializing 015D                                 _ledOpened 0031  
            ??_INTERRUPT_InterruptManager 0072                                 _copyInput 007A  
                     _My_InterruptHandler 012A                                  ?_process 0070  
                               _readInput 00A4                             _reset_Zyklus1 0257  
                           _reset_Zyklus2 024B                                 blink1@tOn 0075  
                       ??_TMR0_Initialize 0074                               _get_Zyklus1 0200  
                             _get_Zyklus2 01ED                                 clear_ram0 0281  
                                _PIE0bits 0716                      ?_My_InterruptHandler 0070  
     __size_of_INTERRUPT_InterruptManager 0010                ??_TMR0_SetInterruptHandler 0074  
                                _PIR0bits 070C                                  _TMR0_ISR 0222  
                            blink1@status 003C                              ??_get_Zyklus 0074  
                              ?_readInput 0070                            ?_reset_Zyklus1 0070  
                          ?_reset_Zyklus2 0070                     ??_My_InterruptHandler 0070  
                      __end_of_get_Zyklus 01D9                     __size_of_reset_Zyklus 000C  
                 ??_OSCILLATOR_Initialize 0072                         ??_TMR0_StartTimer 0072  
                          _ledProgramming 0033                               _currentCode 002F  
                              _T0CON0bits 059E                                  _ledAlarm 0032  
                                __ptext10 0263                                  __ptext11 01C1  
                                __ptext20 026F                                  __ptext12 0287  
                                __ptext13 0231                                  __ptext22 0222  
                                __ptext14 0293                                  __ptext23 012A  
                                __ptext15 023E                                  __ptext24 0297  
                                __ptext16 01D9                                  __ptext17 028D  
                                __ptext18 0279                                  __ptext19 0183  
                        __size_of_process 007C                             __size_of_main 000F  
                           __size_of_sync 0006                              _reset_Zyklus 0263  
    __end_of_TMR0_DefaultInterruptHandler 0298     __size_of_TMR0_DefaultInterruptHandler 0001  
            _TMR0_DefaultInterruptHandler 0297                     _switchReadCodeNegEdge 0036  
                       readInput@oldInput 002C                         _ZYKLUS_Initialize 0231  
                                int$flags 007E                     _switchReadCodePosEdge 0035  
                      ?_ZYKLUS_Initialize 0070        __end_of_INTERRUPT_InterruptManager 0014  
              _INTERRUPT_InterruptManager 0004                                  _synchron 007B  
                           ??_writeOutput 0072                       ??_ZYKLUS_Initialize 0074  
                              _INTCONbits 000B                           ??_reset_Zyklus1 0072  
                         ??_reset_Zyklus2 0072                               ??_readInput 0072  
                                intlevel1 0000                   ?_PIN_MANAGER_Initialize 0070  
               __end_of_ZYKLUS_Initialize 023E             ?_TMR0_DefaultInterruptHandler 0070  
                         _TMR0_Initialize 01D9                       __end_of_writeOutput 01C1  
          __end_of_PIN_MANAGER_Initialize 01A8                              ?_get_Zyklus1 0070  
                            ?_get_Zyklus2 0070  
